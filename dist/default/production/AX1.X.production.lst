

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Apr 14 20:50:13 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  00073C                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _I2C_slaveWriteData
    46  00073C  55                 	db	85
    47                           
    48                           	psect	idataBANK0
    49  00030A                     __pidataBANK0:
    50                           	opt stack 0
    51                           
    52                           ;initializer for I2C_StatusCallbackOld@EEPROM_Buffer
    53  00030A  00                 	db	0
    54  00030B  01                 	db	1
    55  00030C  02                 	db	2
    56  00030D  03                 	db	3
    57  00030E  04                 	db	4
    58  00030F  05                 	db	5
    59  000310  06                 	db	6
    60  000311  07                 	db	7
    61  000312  08                 	db	8
    62  000313  09                 	db	9
    63  000314  0A                 	db	10
    64  000315  0B                 	db	11
    65  000316  0C                 	db	12
    66  000317  0D                 	db	13
    67  000318  0E                 	db	14
    68  000319  0F                 	db	15
    69  00031A  10                 	db	16
    70  00031B  11                 	db	17
    71  00031C  12                 	db	18
    72  00031D  13                 	db	19
    73  00031E  14                 	db	20
    74  00031F  15                 	db	21
    75  000320  16                 	db	22
    76  000321  17                 	db	23
    77  000322  18                 	db	24
    78  000323  19                 	db	25
    79  000324  1A                 	db	26
    80  000325  1B                 	db	27
    81  000326  1C                 	db	28
    82  000327  1D                 	db	29
    83  000328  1E                 	db	30
    84  000329  1F                 	db	31
    85  00032A  20                 	db	32
    86  00032B  21                 	db	33
    87  00032C  22                 	db	34
    88  00032D  23                 	db	35
    89  00032E  24                 	db	36
    90  00032F  25                 	db	37
    91  000330  26                 	db	38
    92  000331  27                 	db	39
    93  000332  28                 	db	40
    94  000333  29                 	db	41
    95  000334  2A                 	db	42
    96  000335  2B                 	db	43
    97  000336  2C                 	db	44
    98  000337  2D                 	db	45
    99  000338  2E                 	db	46
   100  000339  2F                 	db	47
   101  00033A  30                 	db	48
   102  00033B  31                 	db	49
   103  00033C  32                 	db	50
   104  00033D  33                 	db	51
   105  00033E  34                 	db	52
   106  00033F  35                 	db	53
   107  000340  36                 	db	54
   108  000341  37                 	db	55
   109  000342  38                 	db	56
   110  000343  39                 	db	57
   111  000344  3A                 	db	58
   112  000345  3B                 	db	59
   113  000346  3C                 	db	60
   114  000347  3D                 	db	61
   115  000348  3E                 	db	62
   116  000349  3F                 	db	63
   117  00034A  40                 	db	64
   118  00034B  41                 	db	65
   119  00034C  42                 	db	66
   120  00034D  43                 	db	67
   121  00034E  44                 	db	68
   122  00034F  45                 	db	69
   123  000350  46                 	db	70
   124  000351  47                 	db	71
   125  000352  48                 	db	72
   126  000353  49                 	db	73
   127  000354  4A                 	db	74
   128  000355  4B                 	db	75
   129  000356  4C                 	db	76
   130  000357  4D                 	db	77
   131  000358  4E                 	db	78
   132  000359  4F                 	db	79
   133  00035A  50                 	db	80
   134  00035B  51                 	db	81
   135  00035C  52                 	db	82
   136  00035D  53                 	db	83
   137  00035E  54                 	db	84
   138  00035F  55                 	db	85
   139  000360  56                 	db	86
   140  000361  57                 	db	87
   141  000362  58                 	db	88
   142  000363  59                 	db	89
   143  000364  5A                 	db	90
   144  000365  5B                 	db	91
   145  000366  5C                 	db	92
   146  000367  5D                 	db	93
   147  000368  5E                 	db	94
   148  000369  5F                 	db	95
   149  00036A  60                 	db	96
   150  00036B  61                 	db	97
   151  00036C  62                 	db	98
   152  00036D  63                 	db	99
   153  00036E  64                 	db	100
   154  00036F  65                 	db	101
   155  000370  66                 	db	102
   156  000371  67                 	db	103
   157  000372  68                 	db	104
   158  000373  69                 	db	105
   159  000374  6A                 	db	106
   160  000375  6B                 	db	107
   161  000376  6C                 	db	108
   162  000377  6D                 	db	109
   163  000378  6E                 	db	110
   164  000379  6F                 	db	111
   165  00037A  70                 	db	112
   166  00037B  71                 	db	113
   167  00037C  72                 	db	114
   168  00037D  73                 	db	115
   169  00037E  74                 	db	116
   170  00037F  75                 	db	117
   171  000380  76                 	db	118
   172  000381  77                 	db	119
   173  000382  78                 	db	120
   174  000383  79                 	db	121
   175  000384  7A                 	db	122
   176  000385  7B                 	db	123
   177  000386  7C                 	db	124
   178  000387  7D                 	db	125
   179  000388  7E                 	db	126
   180  000389  7F                 	db	127
   181                           
   182                           	psect	nvCOMRAM
   183  00003D                     __pnvCOMRAM:
   184                           	opt stack 0
   185  00003D                     _timer1ReloadVal:
   186                           	opt stack 0
   187  00003D                     	ds	2
   188  0000                     _WPUB	set	3931
   189  0000                     _ADCON0	set	4034
   190  0000                     _ADCON0bits	set	4034
   191  0000                     _ADCON1	set	4033
   192  0000                     _ADCON2	set	4032
   193  0000                     _ADRESH	set	4036
   194  0000                     _ADRESL	set	4035
   195  0000                     _BAUDCON1	set	4007
   196  0000                     _BAUDCON2	set	4025
   197  0000                     _CCP1CON	set	4027
   198  0000                     _CCPR1H	set	4029
   199  0000                     _CCPR1L	set	4028
   200  0000                     _CCPTMRSbits	set	3993
   201  0000                     _INTCONbits	set	4082
   202  0000                     _IPR1bits	set	3999
   203  0000                     _LATA	set	3977
   204  0000                     _LATB	set	3978
   205  0000                     _LATC	set	3979
   206  0000                     _LATD	set	3980
   207  0000                     _LATE	set	3981
   208  0000                     _OSCCON	set	4051
   209  0000                     _OSCCON2	set	4050
   210  0000                     _OSCTUNE	set	3995
   211  0000                     _PIE1bits	set	3997
   212  0000                     _PIR1bits	set	3998
   213  0000                     _PIR3bits	set	4004
   214  0000                     _PORTCbits	set	3970
   215  0000                     _RCREG1	set	4014
   216  0000                     _RCREG2	set	3962
   217  0000                     _RCSTA1	set	4011
   218  0000                     _RCSTA1bits	set	4011
   219  0000                     _RCSTA2	set	4006
   220  0000                     _RCSTA2bits	set	4006
   221  0000                     _REFOCON	set	3994
   222  0000                     _SPBRG1	set	4015
   223  0000                     _SPBRG2	set	3963
   224  0000                     _SPBRGH1	set	3965
   225  0000                     _SPBRGH2	set	3964
   226  0000                     _SSPADD	set	4040
   227  0000                     _SSPBUF	set	4041
   228  0000                     _SSPCON1	set	4038
   229  0000                     _SSPCON1bits	set	4038
   230  0000                     _SSPCON2	set	4037
   231  0000                     _SSPSTAT	set	4039
   232  0000                     _SSPSTATbits	set	4039
   233  0000                     _T1CON	set	4045
   234  0000                     _T1CONbits	set	4045
   235  0000                     _T1GCON	set	4010
   236  0000                     _T1GCONbits	set	4010
   237  0000                     _TMR1H	set	4047
   238  0000                     _TMR1L	set	4046
   239  0000                     _TRISA	set	3986
   240  0000                     _TRISB	set	3987
   241  0000                     _TRISC	set	3988
   242  0000                     _TRISD	set	3989
   243  0000                     _TRISE	set	3990
   244  0000                     _TXREG1	set	4013
   245  0000                     _TXREG2	set	3961
   246  0000                     _TXSTA1	set	4012
   247  0000                     _TXSTA2	set	4026
   248  0000                     _IPEN	set	32391
   249  0000                     _LATB0	set	31824
   250  0000                     _LATB2	set	31826
   251  0000                     _LATB3	set	31827
   252  0000                     _LATC0	set	31832
   253  0000                     _LATC1	set	31833
   254  0000                     _LATC2	set	31834
   255  0000                     _LATD0	set	31840
   256  0000                     _LATD1	set	31841
   257  0000                     _LATD2	set	31842
   258  0000                     _LATD3	set	31843
   259  0000                     _TRISC0	set	31904
   260  0000                     _TRISC1	set	31905
   261                           
   262                           ; #config settings
   263  0000                     
   264                           	psect	cinit
   265  0004EC                     __pcinit:
   266                           	opt stack 0
   267  0004EC                     start_initialization:
   268                           	opt stack 0
   269  0004EC                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Initialize objects allocated to BANK0 (128 bytes)
   273                           ; load TBLPTR registers with __pidataBANK0
   274  0004EC  0E0A               	movlw	low __pidataBANK0
   275  0004EE  6EF6               	movwf	tblptrl,c
   276  0004F0  0E03               	movlw	high __pidataBANK0
   277  0004F2  6EF7               	movwf	tblptrh,c
   278  0004F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   279  0004F6  6EF8               	movwf	tblptru,c
   280  0004F8  EE00  F060         	lfsr	0,__pdataBANK0
   281  0004FC  EE10 F080          	lfsr	1,128
   282  000500                     copy_data0:
   283  000500  0009               	tblrd		*+
   284  000502  CFF5 FFEE          	movff	tablat,postinc0
   285  000506  50E5               	movf	postdec1,w,c
   286  000508  50E1               	movf	fsr1l,w,c
   287  00050A  E1FA               	bnz	copy_data0
   288                           
   289                           ; Initialize objects allocated to COMRAM (1 bytes)
   290                           ; load TBLPTR registers with __pidataCOMRAM
   291  00050C  0E3C               	movlw	low __pidataCOMRAM
   292  00050E  6EF6               	movwf	tblptrl,c
   293  000510  0E07               	movlw	high __pidataCOMRAM
   294  000512  6EF7               	movwf	tblptrh,c
   295  000514  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   296  000516  6EF8               	movwf	tblptru,c
   297  000518  0009               	tblrd		*+	;fetch initializer
   298  00051A  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   299                           
   300                           ; Clear objects allocated to BANK0 (32 bytes)
   301  00051E  EE00  F0E0         	lfsr	0,__pbssBANK0
   302  000522  0E20               	movlw	32
   303  000524                     clear_0:
   304  000524  6AEE               	clrf	postinc0,c
   305  000526  06E8               	decf	wreg,f,c
   306  000528  E1FD               	bnz	clear_0
   307                           
   308                           ; Clear objects allocated to COMRAM (12 bytes)
   309  00052A  EE00  F031         	lfsr	0,__pbssCOMRAM
   310  00052E  0E0C               	movlw	12
   311  000530                     clear_1:
   312  000530  6AEE               	clrf	postinc0,c
   313  000532  06E8               	decf	wreg,f,c
   314  000534  E1FD               	bnz	clear_1
   315  000536                     end_of_initialization:
   316                           	opt stack 0
   317  000536                     __end_of__initialization:
   318                           	opt stack 0
   319  000536  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   320  000538  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   321  00053A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   322  00053C  6EF8               	movwf	tblptru,c
   323  00053E  0100               	movlb	0
   324  000540  EF47  F000         	goto	_main	;jump to C main() function
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	bssCOMRAM
   335  000031                     __pbssCOMRAM:
   336                           	opt stack 0
   337  000031                     _bytesSent:
   338                           	opt stack 0
   339  000031                     	ds	2
   340  000033                     _nbBytesToSend:
   341                           	opt stack 0
   342  000033                     	ds	2
   343  000035                     _readIndex:
   344                           	opt stack 0
   345  000035                     	ds	2
   346  000037                     I2C_StatusCallbackOld@eepromAddress:
   347                           	opt stack 0
   348  000037                     	ds	1
   349  000038                     I2C_StatusCallbackOld@slaveWriteType:
   350                           	opt stack 0
   351  000038                     	ds	1
   352  000039                     _currentCommand:
   353                           	opt stack 0
   354  000039                     	ds	1
   355  00003A                     _parameter1:
   356                           	opt stack 0
   357  00003A                     	ds	1
   358  00003B                     _parameter2:
   359                           	opt stack 0
   360  00003B                     	ds	1
   361  00003C                     _parameter3:
   362                           	opt stack 0
   363  00003C                     	ds	1
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           postdec1	equ	0xFE5
   371                           fsr1l	equ	0xFE1
   372                           
   373                           	psect	dataCOMRAM
   374  00003F                     __pdataCOMRAM:
   375                           	opt stack 0
   376  00003F                     _I2C_slaveWriteData:
   377                           	opt stack 0
   378  00003F                     	ds	1
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	bssBANK0
   389  0000E0                     __pbssBANK0:
   390                           	opt stack 0
   391  0000E0                     _dataToSend:
   392                           	opt stack 0
   393  0000E0                     	ds	32
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           postdec1	equ	0xFE5
   401                           fsr1l	equ	0xFE1
   402                           
   403                           	psect	dataBANK0
   404  000060                     __pdataBANK0:
   405                           	opt stack 0
   406  000060                     I2C_StatusCallbackOld@EEPROM_Buffer:
   407                           	opt stack 0
   408  000060                     	ds	128
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	cstackCOMRAM
   419  000001                     __pcstackCOMRAM:
   420                           	opt stack 0
   421  000001                     ??_getByteToSend:
   422  000001                     ?_ADC_GetConversion:
   423                           	opt stack 0
   424  000001                     setLedOn@led:
   425                           	opt stack 0
   426  000001                     setLedOff@led:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x0
   430  000001                     	ds	1
   431  000002                     getByteToSend@d:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x1
   435  000002                     	ds	1
   436  000003                     ??_ADC_GetConversion:
   437  000003                     ??_setLedOn:
   438  000003                     ??_setLedOff:
   439                           
   440                           ; 1 bytes @ 0x2
   441  000003                     	ds	2
   442  000005                     ADC_GetConversion@channel:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x4
   446  000005                     	ds	1
   447  000006                     ?_getADC:
   448                           	opt stack 0
   449  000006                     getADC@adc:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x5
   453  000006                     	ds	2
   454  000008                     handleByteReceived@xlow:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x7
   458  000008                     	ds	1
   459  000009                     handleByteReceived@xhigh:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x8
   463  000009                     	ds	1
   464  00000A                     handleByteReceived@value:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x9
   468  00000A                     	ds	2
   469  00000C                     handleByteReceived@data:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0xB
   473  00000C                     	ds	1
   474  00000D                     I2C_StatusCallback@i2c_bus_state:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xC
   478  00000D                     	ds	1
   479  00000E                     I2C_StatusCallback@data:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0xD
   483  00000E                     	ds	1
   484  00000F                     I2C_ISR@i2c_data:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0xE
   488  00000F                     	ds	1
   489  000010                     ??_INTERRUPT_InterruptManager:
   490                           
   491                           ; 1 bytes @ 0xF
   492  000010                     	ds	14
   493  00001E                     ??_TMR1_Initialize:
   494  00001E                     ?___awdiv:
   495                           	opt stack 0
   496  00001E                     ___awdiv@dividend:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x1D
   500  00001E                     	ds	2
   501  000020                     ___awdiv@divisor:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1F
   505  000020                     	ds	2
   506  000022                     ___awdiv@counter:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x21
   510  000022                     	ds	1
   511  000023                     ___awdiv@sign:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x22
   515  000023                     	ds	1
   516  000024                     ___awdiv@quotient:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x23
   520  000024                     	ds	2
   521  000026                     delay_ms@ms:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x25
   525  000026                     	ds	2
   526  000028                     ??_delay_ms:
   527                           
   528                           ; 1 bytes @ 0x27
   529  000028                     	ds	1
   530  000029                     delay_ms@n:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x28
   534  000029                     	ds	2
   535  00002B                     delay_ms@i:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x2A
   539  00002B                     	ds	2
   540  00002D                     main@i:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x2C
   544  00002D                     	ds	2
   545  00002F                     main@delay:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x2E
   549  00002F                     	ds	2
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559 ;;
   560 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   561 ;;
   562 ;; *************** function _main *****************
   563 ;; Defined at:
   564 ;;		line 64 in file "main.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  i               2   44[COMRAM] int 
   569 ;;  delay           2   46[COMRAM] int 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   582 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   583 ;;Total ram usage:        4 bytes
   584 ;; Hardware stack levels required when called:    9
   585 ;; This function calls:
   586 ;;		_SYSTEM_Initialize
   587 ;;		_delay_ms
   588 ;; This function is called by:
   589 ;;		Startup code after reset
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text0
   594  00008E                     __ptext0:
   595                           	opt stack 0
   596  00008E                     _main:
   597                           	opt stack 22
   598                           
   599                           ;main.c: 66: SYSTEM_Initialize();
   600                           
   601                           ;incstack = 0
   602  00008E  EC3F  F003         	call	_SYSTEM_Initialize	;wreg free
   603                           
   604                           ;main.c: 85: (INTCONbits.GIE = 1);
   605  000092  8EF2               	bsf	intcon,7,c	;volatile
   606                           
   607                           ;main.c: 88: (INTCONbits.PEIE = 1);
   608  000094  8CF2               	bsf	intcon,6,c	;volatile
   609                           
   610                           ;main.c: 99: do { TRISC0 = 0; } while(0);
   611  000096  9094               	bcf	3988,0,c	;volatile
   612                           
   613                           ;main.c: 100: do { TRISC1 = 0; } while(0);
   614  000098  9294               	bcf	3988,1,c	;volatile
   615                           
   616                           ;main.c: 101: int delay = 10;
   617  00009A  0E00               	movlw	0
   618  00009C  6E30               	movwf	main@delay+1,c
   619  00009E  0E0A               	movlw	10
   620  0000A0  6E2F               	movwf	main@delay,c
   621                           
   622                           ;main.c: 102: for (int i = 0; i < 2; i++) {
   623  0000A2  0E00               	movlw	0
   624  0000A4  6E2E               	movwf	main@i+1,c
   625  0000A6  0E00               	movlw	0
   626  0000A8  6E2D               	movwf	main@i,c
   627  0000AA                     l1960:
   628  0000AA  BE2E               	btfsc	main@i+1,7,c
   629  0000AC  D006               	goto	l361
   630  0000AE  502E               	movf	main@i+1,w,c
   631  0000B0  E15D               	bnz	l402
   632  0000B2  0E02               	movlw	2
   633  0000B4  5C2D               	subwf	main@i,w,c
   634  0000B6  B0D8               	btfsc	status,0,c
   635  0000B8  D059               	goto	l402
   636  0000BA                     l361:
   637  0000BA  868C               	bsf	3980,3,c	;volatile
   638                           
   639                           ;main.c: 105: delay_ms(delay);
   640  0000BC  C02F  F026         	movff	main@delay,delay_ms@ms
   641  0000C0  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   642  0000C4  EC3F  F002         	call	_delay_ms	;wreg free
   643                           
   644                           ;main.c: 106: do { LATD3 = 0; } while(0);
   645  0000C8  968C               	bcf	3980,3,c	;volatile
   646                           
   647                           ;main.c: 107: do { LATD2 = 1; } while(0);
   648  0000CA  848C               	bsf	3980,2,c	;volatile
   649                           
   650                           ;main.c: 108: delay_ms(delay);
   651  0000CC  C02F  F026         	movff	main@delay,delay_ms@ms
   652  0000D0  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   653  0000D4  EC3F  F002         	call	_delay_ms	;wreg free
   654                           
   655                           ;main.c: 109: do { LATD2 = 0; } while(0);
   656  0000D8  948C               	bcf	3980,2,c	;volatile
   657                           
   658                           ;main.c: 110: do { LATD1 = 1; } while(0);
   659  0000DA  828C               	bsf	3980,1,c	;volatile
   660                           
   661                           ;main.c: 111: delay_ms(delay);
   662  0000DC  C02F  F026         	movff	main@delay,delay_ms@ms
   663  0000E0  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   664  0000E4  EC3F  F002         	call	_delay_ms	;wreg free
   665                           
   666                           ;main.c: 112: do { LATD1 = 0; } while(0);
   667  0000E8  928C               	bcf	3980,1,c	;volatile
   668                           
   669                           ;main.c: 113: do { LATD0 = 1; } while(0);
   670  0000EA  808C               	bsf	3980,0,c	;volatile
   671                           
   672                           ;main.c: 114: delay_ms(delay);
   673  0000EC  C02F  F026         	movff	main@delay,delay_ms@ms
   674  0000F0  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   675  0000F4  EC3F  F002         	call	_delay_ms	;wreg free
   676                           
   677                           ;main.c: 115: do { LATD0 = 0; } while(0);
   678  0000F8  908C               	bcf	3980,0,c	;volatile
   679                           
   680                           ;main.c: 116: do { LATC2 = 1; } while(0);
   681  0000FA  848B               	bsf	3979,2,c	;volatile
   682                           
   683                           ;main.c: 117: delay_ms(delay);
   684  0000FC  C02F  F026         	movff	main@delay,delay_ms@ms
   685  000100  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   686  000104  EC3F  F002         	call	_delay_ms	;wreg free
   687                           
   688                           ;main.c: 118: do { LATC2 = 0; } while(0);
   689  000108  948B               	bcf	3979,2,c	;volatile
   690                           
   691                           ;main.c: 119: do { LATC1 = 1; } while(0);
   692  00010A  828B               	bsf	3979,1,c	;volatile
   693                           
   694                           ;main.c: 120: delay_ms(delay);
   695  00010C  C02F  F026         	movff	main@delay,delay_ms@ms
   696  000110  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   697  000114  EC3F  F002         	call	_delay_ms	;wreg free
   698                           
   699                           ;main.c: 121: do { LATC1 = 0; } while(0);
   700  000118  928B               	bcf	3979,1,c	;volatile
   701                           
   702                           ;main.c: 122: do { LATC0 = 1; } while(0);
   703  00011A  808B               	bsf	3979,0,c	;volatile
   704                           
   705                           ;main.c: 123: delay_ms(delay);
   706  00011C  C02F  F026         	movff	main@delay,delay_ms@ms
   707  000120  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   708  000124  EC3F  F002         	call	_delay_ms	;wreg free
   709                           
   710                           ;main.c: 124: do { LATC0 = 0; } while(0);
   711  000128  908B               	bcf	3979,0,c	;volatile
   712                           
   713                           ;main.c: 125: do { LATB0 = 1; } while(0);
   714  00012A  808A               	bsf	3978,0,c	;volatile
   715                           
   716                           ;main.c: 126: delay_ms(delay);
   717  00012C  C02F  F026         	movff	main@delay,delay_ms@ms
   718  000130  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   719  000134  EC3F  F002         	call	_delay_ms	;wreg free
   720                           
   721                           ;main.c: 127: do { LATB0 = 0; } while(0);
   722  000138  908A               	bcf	3978,0,c	;volatile
   723                           
   724                           ;main.c: 128: do { LATB2 = 1; } while(0);
   725  00013A  848A               	bsf	3978,2,c	;volatile
   726                           
   727                           ;main.c: 129: delay_ms(delay);
   728  00013C  C02F  F026         	movff	main@delay,delay_ms@ms
   729  000140  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   730  000144  EC3F  F002         	call	_delay_ms	;wreg free
   731                           
   732                           ;main.c: 130: do { LATB2 = 0; } while(0);
   733  000148  948A               	bcf	3978,2,c	;volatile
   734                           
   735                           ;main.c: 131: do { LATB3 = 1; } while(0);
   736  00014A  868A               	bsf	3978,3,c	;volatile
   737                           
   738                           ;main.c: 132: delay_ms(delay);
   739  00014C  C02F  F026         	movff	main@delay,delay_ms@ms
   740  000150  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   741  000154  EC3F  F002         	call	_delay_ms	;wreg free
   742                           
   743                           ;main.c: 133: do { LATB3 = 0; } while(0);
   744  000158  968A               	bcf	3978,3,c	;volatile
   745                           
   746                           ;main.c: 134: delay_ms(delay);
   747  00015A  C02F  F026         	movff	main@delay,delay_ms@ms
   748  00015E  C030  F027         	movff	main@delay+1,delay_ms@ms+1
   749  000162  EC3F  F002         	call	_delay_ms	;wreg free
   750  000166  4A2D               	infsnz	main@i,f,c
   751  000168  2A2E               	incf	main@i+1,f,c
   752  00016A  D79F               	goto	l1960
   753  00016C                     l402:
   754  00016C  868C               	bsf	3980,3,c	;volatile
   755                           
   756                           ;main.c: 142: delay_ms(1000);
   757  00016E  0E03               	movlw	3
   758  000170  6E27               	movwf	delay_ms@ms+1,c
   759  000172  0EE8               	movlw	232
   760  000174  6E26               	movwf	delay_ms@ms,c
   761  000176  EC3F  F002         	call	_delay_ms	;wreg free
   762                           
   763                           ;main.c: 143: do { LATD3 = 0; } while(0);
   764  00017A  968C               	bcf	3980,3,c	;volatile
   765                           
   766                           ;main.c: 144: delay_ms(1000);
   767  00017C  0E03               	movlw	3
   768  00017E  6E27               	movwf	delay_ms@ms+1,c
   769  000180  0EE8               	movlw	232
   770  000182  6E26               	movwf	delay_ms@ms,c
   771  000184  EC3F  F002         	call	_delay_ms	;wreg free
   772                           
   773                           ;main.c: 151: do { LATD1 = 1; } while(0);
   774  000188  828C               	bsf	3980,1,c	;volatile
   775                           
   776                           ;main.c: 153: do { LATD0 = 1; } while(0);
   777  00018A  808C               	bsf	3980,0,c	;volatile
   778                           
   779                           ;main.c: 155: do { LATC2 = 1; } while(0);
   780  00018C  848B               	bsf	3979,2,c	;volatile
   781                           
   782                           ;main.c: 156: delay_ms(1000);
   783  00018E  0E03               	movlw	3
   784  000190  6E27               	movwf	delay_ms@ms+1,c
   785  000192  0EE8               	movlw	232
   786  000194  6E26               	movwf	delay_ms@ms,c
   787  000196  EC3F  F002         	call	_delay_ms	;wreg free
   788                           
   789                           ;main.c: 157: do { LATD3 = 0; } while(0);
   790  00019A  968C               	bcf	3980,3,c	;volatile
   791                           
   792                           ;main.c: 158: do { LATD2 = 0; } while(0);
   793  00019C  948C               	bcf	3980,2,c	;volatile
   794                           
   795                           ;main.c: 159: do { LATD1 = 0; } while(0);
   796  00019E  928C               	bcf	3980,1,c	;volatile
   797                           
   798                           ;main.c: 160: do { LATD0 = 0; } while(0);
   799  0001A0  908C               	bcf	3980,0,c	;volatile
   800                           
   801                           ;main.c: 161: do { LATC2 = 0; } while(0);
   802  0001A2  948B               	bcf	3979,2,c	;volatile
   803                           
   804                           ;main.c: 162: do { LATB0 = 0; } while(0);
   805  0001A4  908A               	bcf	3978,0,c	;volatile
   806  0001A6  D7E2               	goto	l402
   807  0001A8                     __end_of_main:
   808                           	opt stack 0
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           intcon	equ	0xFF2
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           postdec1	equ	0xFE5
   817                           fsr1l	equ	0xFE1
   818                           status	equ	0xFD8
   819                           
   820 ;; *************** function _delay_ms *****************
   821 ;; Defined at:
   822 ;;		line 48 in file "main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  ms              2   37[COMRAM] int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  i               2   42[COMRAM] int 
   827 ;;  n               2   40[COMRAM] int 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   838 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   840 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   841 ;;Total ram usage:        7 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    7
   844 ;; This function calls:
   845 ;;		___awdiv
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text1
   852  00047E                     __ptext1:
   853                           	opt stack 0
   854  00047E                     _delay_ms:
   855                           	opt stack 23
   856                           
   857                           ;main.c: 49: if (ms < 10) {
   858                           
   859                           ;incstack = 0
   860  00047E  BE27               	btfsc	delay_ms@ms+1,7,c
   861  000480  D006               	goto	l1900
   862  000482  5027               	movf	delay_ms@ms+1,w,c
   863  000484  E10C               	bnz	l1902
   864  000486  0E0A               	movlw	10
   865  000488  5C26               	subwf	delay_ms@ms,w,c
   866  00048A  B0D8               	btfsc	status,0,c
   867  00048C  D008               	goto	l1902
   868  00048E                     l1900:
   869                           
   870                           ;main.c: 50: _delay((unsigned long)((10)*(16000000/4000.0)));
   871  00048E  0E34               	movlw	52
   872  000490  6E28               	movwf	??_delay_ms& (0+255),c
   873  000492  0EF2               	movlw	242
   874  000494                     u747:
   875  000494  2EE8               	decfsz	wreg,f,c
   876  000496  D7FE               	goto	u747
   877  000498  2E28               	decfsz	??_delay_ms& (0+255),f,c
   878  00049A  D7FC               	goto	u747
   879                           
   880                           ;main.c: 51: } else {
   881  00049C  0012               	return	
   882  00049E                     l1902:
   883                           
   884                           ;main.c: 52: int n = ms / 10;
   885  00049E  C026  F01E         	movff	delay_ms@ms,___awdiv@dividend
   886  0004A2  C027  F01F         	movff	delay_ms@ms+1,___awdiv@dividend+1
   887  0004A6  0E00               	movlw	0
   888  0004A8  6E21               	movwf	___awdiv@divisor+1,c
   889  0004AA  0E0A               	movlw	10
   890  0004AC  6E20               	movwf	___awdiv@divisor,c
   891  0004AE  EC43  F001         	call	___awdiv	;wreg free
   892  0004B2  C01E  F029         	movff	?___awdiv,delay_ms@n
   893  0004B6  C01F  F02A         	movff	?___awdiv+1,delay_ms@n+1
   894                           
   895                           ;main.c: 53: for (int i = 0; i < n; i++) {
   896  0004BA  0E00               	movlw	0
   897  0004BC  6E2C               	movwf	delay_ms@i+1,c
   898  0004BE  0E00               	movlw	0
   899  0004C0  6E2B               	movwf	delay_ms@i,c
   900  0004C2  D009               	goto	l349
   901  0004C4                     l1906:
   902                           
   903                           ;main.c: 54: _delay((unsigned long)((10)*(16000000/4000.0)));
   904  0004C4  0E34               	movlw	52
   905  0004C6  6E28               	movwf	??_delay_ms& (0+255),c
   906  0004C8  0EF2               	movlw	242
   907  0004CA                     u757:
   908  0004CA  2EE8               	decfsz	wreg,f,c
   909  0004CC  D7FE               	goto	u757
   910  0004CE  2E28               	decfsz	??_delay_ms& (0+255),f,c
   911  0004D0  D7FC               	goto	u757
   912  0004D2  4A2B               	infsnz	delay_ms@i,f,c
   913  0004D4  2A2C               	incf	delay_ms@i+1,f,c
   914  0004D6                     l349:
   915  0004D6  5029               	movf	delay_ms@n,w,c
   916  0004D8  5C2B               	subwf	delay_ms@i,w,c
   917  0004DA  502C               	movf	delay_ms@i+1,w,c
   918  0004DC  0A80               	xorlw	128
   919  0004DE  6E28               	movwf	??_delay_ms& (0+255),c
   920  0004E0  502A               	movf	delay_ms@n+1,w,c
   921  0004E2  0A80               	xorlw	128
   922  0004E4  5828               	subwfb	??_delay_ms& (0+255),w,c
   923  0004E6  B0D8               	btfsc	status,0,c
   924  0004E8  0012               	return	
   925  0004EA  D7EC               	goto	l1906
   926  0004EC                     __end_of_delay_ms:
   927                           	opt stack 0
   928                           tblptru	equ	0xFF8
   929                           tblptrh	equ	0xFF7
   930                           tblptrl	equ	0xFF6
   931                           tablat	equ	0xFF5
   932                           intcon	equ	0xFF2
   933                           postinc0	equ	0xFEE
   934                           wreg	equ	0xFE8
   935                           postdec1	equ	0xFE5
   936                           fsr1l	equ	0xFE1
   937                           status	equ	0xFD8
   938                           
   939 ;; *************** function ___awdiv *****************
   940 ;; Defined at:
   941 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  dividend        2   29[COMRAM] int 
   944 ;;  divisor         2   31[COMRAM] int 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  quotient        2   35[COMRAM] int 
   947 ;;  sign            1   34[COMRAM] unsigned char 
   948 ;;  counter         1   33[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  2   29[COMRAM] int 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   959 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   961 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   962 ;;Total ram usage:        8 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    6
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_delay_ms
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text2
   973  000286                     __ptext2:
   974                           	opt stack 0
   975  000286                     ___awdiv:
   976                           	opt stack 23
   977                           
   978                           ;incstack = 0
   979  000286  0E00               	movlw	0
   980  000288  6E23               	movwf	___awdiv@sign,c
   981  00028A  AE21               	btfss	___awdiv@divisor+1,7,c
   982  00028C  D006               	goto	l1840
   983  00028E  6C20               	negf	___awdiv@divisor,c
   984  000290  1E21               	comf	___awdiv@divisor+1,f,c
   985  000292  B0D8               	btfsc	status,0,c
   986  000294  2A21               	incf	___awdiv@divisor+1,f,c
   987  000296  0E01               	movlw	1
   988  000298  6E23               	movwf	___awdiv@sign,c
   989  00029A                     l1840:
   990  00029A  AE1F               	btfss	___awdiv@dividend+1,7,c
   991  00029C  D006               	goto	l1846
   992  00029E  6C1E               	negf	___awdiv@dividend,c
   993  0002A0  1E1F               	comf	___awdiv@dividend+1,f,c
   994  0002A2  B0D8               	btfsc	status,0,c
   995  0002A4  2A1F               	incf	___awdiv@dividend+1,f,c
   996  0002A6  0E01               	movlw	1
   997  0002A8  1A23               	xorwf	___awdiv@sign,f,c
   998  0002AA                     l1846:
   999  0002AA  0E00               	movlw	0
  1000  0002AC  6E25               	movwf	___awdiv@quotient+1,c
  1001  0002AE  0E00               	movlw	0
  1002  0002B0  6E24               	movwf	___awdiv@quotient,c
  1003  0002B2  5020               	movf	___awdiv@divisor,w,c
  1004  0002B4  1021               	iorwf	___awdiv@divisor+1,w,c
  1005  0002B6  B4D8               	btfsc	status,2,c
  1006  0002B8  D01C               	goto	l1868
  1007  0002BA  0E01               	movlw	1
  1008  0002BC  6E22               	movwf	___awdiv@counter,c
  1009  0002BE  D004               	goto	l1854
  1010  0002C0                     l1852:
  1011  0002C0  90D8               	bcf	status,0,c
  1012  0002C2  3620               	rlcf	___awdiv@divisor,f,c
  1013  0002C4  3621               	rlcf	___awdiv@divisor+1,f,c
  1014  0002C6  2A22               	incf	___awdiv@counter,f,c
  1015  0002C8                     l1854:
  1016  0002C8  AE21               	btfss	___awdiv@divisor+1,7,c
  1017  0002CA  D7FA               	goto	l1852
  1018  0002CC                     l1856:
  1019  0002CC  90D8               	bcf	status,0,c
  1020  0002CE  3624               	rlcf	___awdiv@quotient,f,c
  1021  0002D0  3625               	rlcf	___awdiv@quotient+1,f,c
  1022  0002D2  5020               	movf	___awdiv@divisor,w,c
  1023  0002D4  5C1E               	subwf	___awdiv@dividend,w,c
  1024  0002D6  5021               	movf	___awdiv@divisor+1,w,c
  1025  0002D8  581F               	subwfb	___awdiv@dividend+1,w,c
  1026  0002DA  A0D8               	btfss	status,0,c
  1027  0002DC  D005               	goto	l1864
  1028  0002DE  5020               	movf	___awdiv@divisor,w,c
  1029  0002E0  5E1E               	subwf	___awdiv@dividend,f,c
  1030  0002E2  5021               	movf	___awdiv@divisor+1,w,c
  1031  0002E4  5A1F               	subwfb	___awdiv@dividend+1,f,c
  1032  0002E6  8024               	bsf	___awdiv@quotient,0,c
  1033  0002E8                     l1864:
  1034  0002E8  90D8               	bcf	status,0,c
  1035  0002EA  3221               	rrcf	___awdiv@divisor+1,f,c
  1036  0002EC  3220               	rrcf	___awdiv@divisor,f,c
  1037  0002EE  2E22               	decfsz	___awdiv@counter,f,c
  1038  0002F0  D7ED               	goto	l1856
  1039  0002F2                     l1868:
  1040  0002F2  5023               	movf	___awdiv@sign,w,c
  1041  0002F4  B4D8               	btfsc	status,2,c
  1042  0002F6  D004               	goto	l1872
  1043  0002F8  6C24               	negf	___awdiv@quotient,c
  1044  0002FA  1E25               	comf	___awdiv@quotient+1,f,c
  1045  0002FC  B0D8               	btfsc	status,0,c
  1046  0002FE  2A25               	incf	___awdiv@quotient+1,f,c
  1047  000300                     l1872:
  1048  000300  C024  F01E         	movff	___awdiv@quotient,?___awdiv
  1049  000304  C025  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  1050  000308  0012               	return	
  1051  00030A                     __end_of___awdiv:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           intcon	equ	0xFF2
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           postdec1	equ	0xFE5
  1061                           fsr1l	equ	0xFE1
  1062                           status	equ	0xFD8
  1063                           
  1064 ;; *************** function _SYSTEM_Initialize *****************
  1065 ;; Defined at:
  1066 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1084 ;;Total ram usage:        0 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    8
  1087 ;; This function calls:
  1088 ;;		_ADC_Initialize
  1089 ;;		_ECCP1_Initialize
  1090 ;;		_EUSART1_Initialize
  1091 ;;		_EUSART2_Initialize
  1092 ;;		_I2C_Initialize
  1093 ;;		_INTERRUPT_Initialize
  1094 ;;		_OSCILLATOR_Initialize
  1095 ;;		_PIN_MANAGER_Initialize
  1096 ;;		_TMR1_Initialize
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text3
  1103  00067E                     __ptext3:
  1104                           	opt stack 0
  1105  00067E                     _SYSTEM_Initialize:
  1106                           	opt stack 22
  1107                           
  1108                           ;mcc.c: 114: INTERRUPT_Initialize();
  1109                           
  1110                           ;incstack = 0
  1111  00067E  EC99  F003         	call	_INTERRUPT_Initialize	;wreg free
  1112                           
  1113                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1114  000682  EC28  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1115                           
  1116                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1117  000686  EC80  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1118                           
  1119                           ;mcc.c: 117: I2C_Initialize();
  1120  00068A  EC52  F003         	call	_I2C_Initialize	;wreg free
  1121                           
  1122                           ;mcc.c: 118: ECCP1_Initialize();
  1123  00068E  EC89  F003         	call	_ECCP1_Initialize	;wreg free
  1124                           
  1125                           ;mcc.c: 119: ADC_Initialize();
  1126  000692  EC75  F003         	call	_ADC_Initialize	;wreg free
  1127                           
  1128                           ;mcc.c: 120: TMR1_Initialize();
  1129  000696  EC11  F003         	call	_TMR1_Initialize	;wreg free
  1130                           
  1131                           ;mcc.c: 121: EUSART1_Initialize();
  1132  00069A  EC6A  F003         	call	_EUSART1_Initialize	;wreg free
  1133                           
  1134                           ;mcc.c: 122: EUSART2_Initialize();
  1135  00069E  EC5F  F003         	call	_EUSART2_Initialize	;wreg free
  1136  0006A2  0012               	return		;funcret
  1137  0006A4                     __end_of_SYSTEM_Initialize:
  1138                           	opt stack 0
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           intcon	equ	0xFF2
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           postdec1	equ	0xFE5
  1147                           fsr1l	equ	0xFE1
  1148                           status	equ	0xFD8
  1149                           
  1150 ;; *************** function _TMR1_Initialize *****************
  1151 ;; Defined at:
  1152 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    7
  1173 ;; This function calls:
  1174 ;;		_TMR1_StartTimer
  1175 ;; This function is called by:
  1176 ;;		_SYSTEM_Initialize
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text4
  1181  000622                     __ptext4:
  1182                           	opt stack 0
  1183  000622                     _TMR1_Initialize:
  1184                           	opt stack 22
  1185                           
  1186                           ;tmr1.c: 67: T1CON = 0x00;
  1187                           
  1188                           ;incstack = 0
  1189  000622  0E00               	movlw	0
  1190  000624  6ECD               	movwf	4045,c	;volatile
  1191                           
  1192                           ;tmr1.c: 70: T1GCON = 0x00;
  1193  000626  0E00               	movlw	0
  1194  000628  6EAA               	movwf	4010,c	;volatile
  1195                           
  1196                           ;tmr1.c: 73: TMR1H = 0x00;
  1197  00062A  0E00               	movlw	0
  1198  00062C  6ECF               	movwf	4047,c	;volatile
  1199                           
  1200                           ;tmr1.c: 76: TMR1L = 0x00;
  1201  00062E  0E00               	movlw	0
  1202  000630  6ECE               	movwf	4046,c	;volatile
  1203                           
  1204                           ;tmr1.c: 79: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  1205  000632  50CE               	movf	4046,w,c	;volatile
  1206  000634  CFCF F01E          	movff	4047,??_TMR1_Initialize	;volatile
  1207  000638  6A1F               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  1208  00063A  C01E  F01F         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1209  00063E  6A1E               	clrf	??_TMR1_Initialize,c
  1210  000640  101E               	iorwf	??_TMR1_Initialize,w,c
  1211  000642  6E3D               	movwf	_timer1ReloadVal,c	;volatile
  1212  000644  501F               	movf	??_TMR1_Initialize+1,w,c
  1213  000646  6E3E               	movwf	_timer1ReloadVal+1,c	;volatile
  1214                           
  1215                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  1216  000648  909E               	bcf	3998,0,c	;volatile
  1217                           
  1218                           ;tmr1.c: 85: TMR1_StartTimer();
  1219  00064A  EC9C  F003         	call	_TMR1_StartTimer	;wreg free
  1220  00064E  0012               	return		;funcret
  1221  000650                     __end_of_TMR1_Initialize:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec1	equ	0xFE5
  1231                           fsr1l	equ	0xFE1
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _TMR1_StartTimer *****************
  1235 ;; Defined at:
  1236 ;;		line 88 in file "mcc_generated_files/tmr1.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		None
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    6
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_TMR1_Initialize
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text5
  1265  000738                     __ptext5:
  1266                           	opt stack 0
  1267  000738                     _TMR1_StartTimer:
  1268                           	opt stack 22
  1269                           
  1270                           ;tmr1.c: 91: T1CONbits.TMR1ON = 1;
  1271                           
  1272                           ;incstack = 0
  1273  000738  80CD               	bsf	4045,0,c	;volatile
  1274  00073A  0012               	return		;funcret
  1275  00073C                     __end_of_TMR1_StartTimer:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           intcon	equ	0xFF2
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1l	equ	0xFE1
  1286                           status	equ	0xFD8
  1287                           
  1288 ;; *************** function _PIN_MANAGER_Initialize *****************
  1289 ;; Defined at:
  1290 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    6
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_SYSTEM_Initialize
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text6
  1319  000650                     __ptext6:
  1320                           	opt stack 0
  1321  000650                     _PIN_MANAGER_Initialize:
  1322                           	opt stack 23
  1323                           
  1324                           ;pin_manager.c: 51: LATB = 0x0;
  1325                           
  1326                           ;incstack = 0
  1327  000650  0E00               	movlw	0
  1328  000652  6E8A               	movwf	3978,c	;volatile
  1329                           
  1330                           ;pin_manager.c: 52: LATA = 0x0;
  1331  000654  0E00               	movlw	0
  1332  000656  6E89               	movwf	3977,c	;volatile
  1333                           
  1334                           ;pin_manager.c: 53: LATE = 0x0;
  1335  000658  0E00               	movlw	0
  1336  00065A  6E8D               	movwf	3981,c	;volatile
  1337                           
  1338                           ;pin_manager.c: 54: LATD = 0x0;
  1339  00065C  0E00               	movlw	0
  1340  00065E  6E8C               	movwf	3980,c	;volatile
  1341                           
  1342                           ;pin_manager.c: 55: LATC = 0x0;
  1343  000660  0E00               	movlw	0
  1344  000662  6E8B               	movwf	3979,c	;volatile
  1345                           
  1346                           ;pin_manager.c: 56: WPUB = 0xFF;
  1347  000664  010F               	movlb	15	; () banked
  1348  000666  695B               	setf	91,b	;volatile
  1349                           
  1350                           ;pin_manager.c: 57: TRISD = 0xB0;
  1351  000668  0EB0               	movlw	176
  1352  00066A  6E95               	movwf	3989,c	;volatile
  1353                           
  1354                           ;pin_manager.c: 58: TRISE = 0x7;
  1355  00066C  0E07               	movlw	7
  1356  00066E  6E96               	movwf	3990,c	;volatile
  1357                           
  1358                           ;pin_manager.c: 59: TRISB = 0xF2;
  1359  000670  0EF2               	movlw	242
  1360  000672  6E93               	movwf	3987,c	;volatile
  1361                           
  1362                           ;pin_manager.c: 60: TRISC = 0xB8;
  1363  000674  0EB8               	movlw	184
  1364  000676  6E94               	movwf	3988,c	;volatile
  1365                           
  1366                           ;pin_manager.c: 61: TRISA = 0xEF;
  1367  000678  0EEF               	movlw	239
  1368  00067A  6E92               	movwf	3986,c	;volatile
  1369                           
  1370                           ; BSR set to: 15
  1371  00067C  0012               	return		;funcret
  1372  00067E                     __end_of_PIN_MANAGER_Initialize:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           intcon	equ	0xFF2
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           postdec1	equ	0xFE5
  1382                           fsr1l	equ	0xFE1
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function _OSCILLATOR_Initialize *****************
  1386 ;; Defined at:
  1387 ;;		line 125 in file "mcc_generated_files/mcc.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    6
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_SYSTEM_Initialize
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text7
  1416  000700                     __ptext7:
  1417                           	opt stack 0
  1418  000700                     _OSCILLATOR_Initialize:
  1419                           	opt stack 23
  1420                           
  1421                           ;mcc.c: 128: OSCCON = 0x60;
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;incstack = 0
  1425  000700  0E60               	movlw	96
  1426  000702  6ED3               	movwf	4051,c	;volatile
  1427                           
  1428                           ;mcc.c: 130: OSCCON2 = 0x00;
  1429  000704  0E00               	movlw	0
  1430  000706  6ED2               	movwf	4050,c	;volatile
  1431                           
  1432                           ;mcc.c: 132: OSCTUNE = 0x00;
  1433  000708  0E00               	movlw	0
  1434  00070A  6E9B               	movwf	3995,c	;volatile
  1435                           
  1436                           ;mcc.c: 134: REFOCON = 0x00;
  1437  00070C  0E00               	movlw	0
  1438  00070E  6E9A               	movwf	3994,c	;volatile
  1439  000710  0012               	return		;funcret
  1440  000712                     __end_of_OSCILLATOR_Initialize:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           intcon	equ	0xFF2
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           postdec1	equ	0xFE5
  1450                           fsr1l	equ	0xFE1
  1451                           status	equ	0xFD8
  1452                           
  1453 ;; *************** function _INTERRUPT_Initialize *****************
  1454 ;; Defined at:
  1455 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		None
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;Total ram usage:        0 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    6
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_SYSTEM_Initialize
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text8
  1484  000732                     __ptext8:
  1485                           	opt stack 0
  1486  000732                     _INTERRUPT_Initialize:
  1487                           	opt stack 23
  1488                           
  1489                           ;interrupt_manager.c: 54: IPEN = 0;
  1490                           
  1491                           ;incstack = 0
  1492  000732  9ED0               	bcf	4048,7,c	;volatile
  1493                           
  1494                           ;interrupt_manager.c: 59: IPR1bits.SSPIP = 0;
  1495  000734  969F               	bcf	3999,3,c	;volatile
  1496  000736  0012               	return		;funcret
  1497  000738                     __end_of_INTERRUPT_Initialize:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           intcon	equ	0xFF2
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1l	equ	0xFE1
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _I2C_Initialize *****************
  1511 ;; Defined at:
  1512 ;;		line 79 in file "mcc_generated_files/i2c.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    6
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_SYSTEM_Initialize
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541  0006A4                     __ptext9:
  1542                           	opt stack 0
  1543  0006A4                     _I2C_Initialize:
  1544                           	opt stack 23
  1545                           
  1546                           ;i2c.c: 82: SSPSTAT = 0xC0;
  1547                           
  1548                           ;incstack = 0
  1549  0006A4  0EC0               	movlw	192
  1550  0006A6  6EC7               	movwf	4039,c	;volatile
  1551                           
  1552                           ;i2c.c: 84: SSPCON1 = 0x26;
  1553  0006A8  0E26               	movlw	38
  1554  0006AA  6EC6               	movwf	4038,c	;volatile
  1555                           
  1556                           ;i2c.c: 86: SSPCON2 = 0x00;
  1557  0006AC  0E00               	movlw	0
  1558  0006AE  6EC5               	movwf	4037,c	;volatile
  1559                           
  1560                           ;i2c.c: 88: SSPADD = (0x7F << 1);
  1561  0006B0  0EFE               	movlw	254
  1562  0006B2  6EC8               	movwf	4040,c	;volatile
  1563                           
  1564                           ;i2c.c: 90: SSPADD = (0x08 << 1);
  1565  0006B4  0E10               	movlw	16
  1566  0006B6  6EC8               	movwf	4040,c	;volatile
  1567                           
  1568                           ;i2c.c: 93: PIR1bits.SSPIF = 0;
  1569  0006B8  969E               	bcf	3998,3,c	;volatile
  1570                           
  1571                           ;i2c.c: 95: PIE1bits.SSPIE = 1;
  1572  0006BA  869D               	bsf	3997,3,c	;volatile
  1573  0006BC  0012               	return		;funcret
  1574  0006BE                     __end_of_I2C_Initialize:
  1575                           	opt stack 0
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           intcon	equ	0xFF2
  1581                           postinc0	equ	0xFEE
  1582                           wreg	equ	0xFE8
  1583                           postdec1	equ	0xFE5
  1584                           fsr1l	equ	0xFE1
  1585                           status	equ	0xFD8
  1586                           
  1587 ;; *************** function _EUSART2_Initialize *****************
  1588 ;; Defined at:
  1589 ;;		line 55 in file "mcc_generated_files/eusart2.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    6
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_SYSTEM_Initialize
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text10
  1618  0006BE                     __ptext10:
  1619                           	opt stack 0
  1620  0006BE                     _EUSART2_Initialize:
  1621                           	opt stack 23
  1622                           
  1623                           ;eusart2.c: 60: BAUDCON2 = 0x08;
  1624                           
  1625                           ;incstack = 0
  1626  0006BE  0E08               	movlw	8
  1627  0006C0  6EB9               	movwf	4025,c	;volatile
  1628                           
  1629                           ;eusart2.c: 63: RCSTA2 = 0x90;
  1630  0006C2  0E90               	movlw	144
  1631  0006C4  6EA6               	movwf	4006,c	;volatile
  1632                           
  1633                           ;eusart2.c: 66: TXSTA2 = 0x26;
  1634  0006C6  0E26               	movlw	38
  1635  0006C8  6EBA               	movwf	4026,c	;volatile
  1636                           
  1637                           ;eusart2.c: 69: SPBRG2 = 0xA0;
  1638  0006CA  0EA0               	movlw	160
  1639  0006CC  6E7B               	movwf	3963,c	;volatile
  1640                           
  1641                           ;eusart2.c: 72: SPBRGH2 = 0x01;
  1642  0006CE  0E01               	movlw	1
  1643  0006D0  6E7C               	movwf	3964,c	;volatile
  1644  0006D2  0012               	return		;funcret
  1645  0006D4                     __end_of_EUSART2_Initialize:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           intcon	equ	0xFF2
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postdec1	equ	0xFE5
  1655                           fsr1l	equ	0xFE1
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _EUSART1_Initialize *****************
  1659 ;; Defined at:
  1660 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    6
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_SYSTEM_Initialize
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text11
  1689  0006D4                     __ptext11:
  1690                           	opt stack 0
  1691  0006D4                     _EUSART1_Initialize:
  1692                           	opt stack 23
  1693                           
  1694                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1695                           
  1696                           ;incstack = 0
  1697  0006D4  0E08               	movlw	8
  1698  0006D6  6EA7               	movwf	4007,c	;volatile
  1699                           
  1700                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1701  0006D8  0E90               	movlw	144
  1702  0006DA  6EAB               	movwf	4011,c	;volatile
  1703                           
  1704                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1705  0006DC  0E24               	movlw	36
  1706  0006DE  6EAC               	movwf	4012,c	;volatile
  1707                           
  1708                           ;eusart1.c: 69: SPBRG1 = 0x03;
  1709  0006E0  0E03               	movlw	3
  1710  0006E2  6EAF               	movwf	4015,c	;volatile
  1711                           
  1712                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  1713  0006E4  0E00               	movlw	0
  1714  0006E6  6E7D               	movwf	3965,c	;volatile
  1715  0006E8  0012               	return		;funcret
  1716  0006EA                     __end_of_EUSART1_Initialize:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           intcon	equ	0xFF2
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1l	equ	0xFE1
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function _ECCP1_Initialize *****************
  1730 ;; Defined at:
  1731 ;;		line 57 in file "mcc_generated_files/eccp1.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    6
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_SYSTEM_Initialize
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text12
  1760  000712                     __ptext12:
  1761                           	opt stack 0
  1762  000712                     _ECCP1_Initialize:
  1763                           	opt stack 23
  1764                           
  1765                           ;eccp1.c: 62: CCP1CON = 0x00;
  1766                           
  1767                           ;incstack = 0
  1768  000712  0E00               	movlw	0
  1769  000714  6EBB               	movwf	4027,c	;volatile
  1770                           
  1771                           ;eccp1.c: 65: CCPR1L = 0x00;
  1772  000716  0E00               	movlw	0
  1773  000718  6EBC               	movwf	4028,c	;volatile
  1774                           
  1775                           ;eccp1.c: 68: CCPR1H = 0x00;
  1776  00071A  0E00               	movlw	0
  1777  00071C  6EBD               	movwf	4029,c	;volatile
  1778                           
  1779                           ;eccp1.c: 71: CCPTMRSbits.C1TSEL = 0x0;
  1780  00071E  9099               	bcf	3993,0,c	;volatile
  1781  000720  0012               	return		;funcret
  1782  000722                     __end_of_ECCP1_Initialize:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           fsr1l	equ	0xFE1
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _ADC_Initialize *****************
  1796 ;; Defined at:
  1797 ;;		line 58 in file "mcc_generated_files/adc.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    6
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_SYSTEM_Initialize
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text13
  1826  0006EA                     __ptext13:
  1827                           	opt stack 0
  1828  0006EA                     _ADC_Initialize:
  1829                           	opt stack 23
  1830                           
  1831                           ;adc.c: 63: ADCON0 = 0x01;
  1832                           
  1833                           ;incstack = 0
  1834  0006EA  0E01               	movlw	1
  1835  0006EC  6EC2               	movwf	4034,c	;volatile
  1836                           
  1837                           ;adc.c: 66: ADCON1 = 0x00;
  1838  0006EE  0E00               	movlw	0
  1839  0006F0  6EC1               	movwf	4033,c	;volatile
  1840                           
  1841                           ;adc.c: 69: ADCON2 = 0x02;
  1842  0006F2  0E02               	movlw	2
  1843  0006F4  6EC0               	movwf	4032,c	;volatile
  1844                           
  1845                           ;adc.c: 72: ADRESH = 0x00;
  1846  0006F6  0E00               	movlw	0
  1847  0006F8  6EC4               	movwf	4036,c	;volatile
  1848                           
  1849                           ;adc.c: 75: ADRESL = 0x00;
  1850  0006FA  0E00               	movlw	0
  1851  0006FC  6EC3               	movwf	4035,c	;volatile
  1852  0006FE  0012               	return		;funcret
  1853  000700                     __end_of_ADC_Initialize:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           intcon	equ	0xFF2
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           postdec1	equ	0xFE5
  1863                           fsr1l	equ	0xFE1
  1864                           status	equ	0xFD8
  1865                           
  1866 ;; *************** function _INTERRUPT_InterruptManager *****************
  1867 ;; Defined at:
  1868 ;;		line 63 in file "mcc_generated_files/interrupt_manager.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;Total ram usage:       14 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    5
  1889 ;; This function calls:
  1890 ;;		_I2C_ISR
  1891 ;; This function is called by:
  1892 ;;		Interrupt level 2
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	intcode
  1897  000008                     __pintcode:
  1898                           	opt stack 0
  1899  000008                     _INTERRUPT_InterruptManager:
  1900                           	opt stack 22
  1901                           
  1902                           ;incstack = 0
  1903  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1904  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
  1905  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1906  000012  CFE9 F012          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1907  000016  CFEA F013          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1908  00001A  CFE1 F014          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1909  00001E  CFE2 F015          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1910  000022  CFD9 F016          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1911  000026  CFDA F017          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1912  00002A  CFF3 F018          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1913  00002E  CFF4 F019          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1914  000032  CFF6 F01A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1915  000036  CFF7 F01B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1916  00003A  CFF8 F01C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1917  00003E  CFF5 F01D          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1918                           
  1919                           ;interrupt_manager.c: 66: if(INTCONbits.PEIE == 1 && PIE1bits.SSPIE == 1 && PIR1bits.SSP
      +                          IF == 1)
  1920  000042  BCF2               	btfsc	intcon,6,c	;volatile
  1921  000044  A69D               	btfss	3997,3,c	;volatile
  1922  000046  D003               	goto	i2l218
  1923  000048  B69E               	btfsc	3998,3,c	;volatile
  1924                           
  1925                           ;interrupt_manager.c: 67: {
  1926                           ;interrupt_manager.c: 68: I2C_ISR();
  1927  00004A  ECA2  F002         	call	_I2C_ISR	;wreg free
  1928  00004E                     i2l218:
  1929  00004E  C01D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1930  000052  C01C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1931  000056  C01B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1932  00005A  C01A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1933  00005E  C019  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1934  000062  C018  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1935  000066  C017  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1936  00006A  C016  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1937  00006E  C015  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1938  000072  C014  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1939  000076  C013  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1940  00007A  C012  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1941  00007E  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1942  000082  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1943  000086  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1944  000088  0011               	retfie		f
  1945  00008A                     __end_of_INTERRUPT_InterruptManager:
  1946                           	opt stack 0
  1947                           pclatu	equ	0xFFB
  1948                           pclath	equ	0xFFA
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           prodh	equ	0xFF4
  1954                           prodl	equ	0xFF3
  1955                           intcon	equ	0xFF2
  1956                           postinc0	equ	0xFEE
  1957                           fsr0h	equ	0xFEA
  1958                           fsr0l	equ	0xFE9
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           fsr2h	equ	0xFDA
  1964                           fsr2l	equ	0xFD9
  1965                           status	equ	0xFD8
  1966                           
  1967 ;; *************** function _I2C_ISR *****************
  1968 ;; Defined at:
  1969 ;;		line 99 in file "mcc_generated_files/i2c.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  i2c_data        1   14[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;Total ram usage:        1 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    4
  1990 ;; This function calls:
  1991 ;;		_I2C_StatusCallback
  1992 ;; This function is called by:
  1993 ;;		_INTERRUPT_InterruptManager
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text15
  1998  000544                     __ptext15:
  1999                           	opt stack 0
  2000  000544                     _I2C_ISR:
  2001                           	opt stack 22
  2002                           
  2003                           ;i2c.c: 100: uint8_t i2c_data = 0x55;
  2004                           
  2005                           ;incstack = 0
  2006  000544  0E55               	movlw	85
  2007  000546  6E0F               	movwf	I2C_ISR@i2c_data,c
  2008                           
  2009                           ;i2c.c: 106: PIR1bits.SSPIF = 0;
  2010  000548  969E               	bcf	3998,3,c	;volatile
  2011                           
  2012                           ;i2c.c: 107: i2c_data = SSPBUF;
  2013  00054A  CFC9 F00F          	movff	4041,I2C_ISR@i2c_data	;volatile
  2014                           
  2015                           ;i2c.c: 108: if (1 == SSPSTATbits.R_nW) {
  2016  00054E  A4C7               	btfss	4039,2,c	;volatile
  2017  000550  D00B               	goto	i2l159
  2018                           
  2019                           ;i2c.c: 109: if ((1 == SSPSTATbits.D_nA) && (1 == PORTCbits.RC4)) {
  2020  000552  BAC7               	btfsc	4039,5,c	;volatile
  2021  000554  A882               	btfss	3970,4,c	;volatile
  2022  000556  D004               	goto	i2l1890
  2023                           
  2024                           ;i2c.c: 111: I2C_StatusCallback(I2C_SLAVE_READ_COMPLETED);
  2025  000558  0E03               	movlw	3
  2026  00055A  ECDF  F002         	call	_I2C_StatusCallback
  2027                           
  2028                           ;i2c.c: 112: } else {
  2029  00055E  D00F               	goto	i2l1896
  2030  000560                     i2l1890:
  2031                           
  2032                           ;i2c.c: 114: I2C_StatusCallback(I2C_SLAVE_READ_REQUEST);
  2033  000560  0E01               	movlw	1
  2034  000562  ECDF  F002         	call	_I2C_StatusCallback
  2035                           
  2036                           ;i2c.c: 115: }
  2037                           ;i2c.c: 116: } else if (0 == SSPSTATbits.D_nA) {
  2038  000566  D00B               	goto	i2l1896
  2039  000568                     i2l159:
  2040  000568  BAC7               	btfsc	4039,5,c	;volatile
  2041  00056A  D004               	goto	i2l163
  2042                           
  2043                           ;i2c.c: 120: I2C_StatusCallback(I2C_SLAVE_WRITE_REQUEST);
  2044  00056C  0E00               	movlw	0
  2045  00056E  ECDF  F002         	call	_I2C_StatusCallback
  2046                           
  2047                           ;i2c.c: 121: } else {
  2048  000572  D005               	goto	i2l1896
  2049  000574                     i2l163:
  2050                           
  2051                           ;i2c.c: 122: I2C_slaveWriteData = i2c_data;
  2052  000574  C00F  F03F         	movff	I2C_ISR@i2c_data,_I2C_slaveWriteData	;volatile
  2053                           
  2054                           ;i2c.c: 125: I2C_StatusCallback(I2C_SLAVE_WRITE_COMPLETED);
  2055  000578  0E02               	movlw	2
  2056  00057A  ECDF  F002         	call	_I2C_StatusCallback
  2057  00057E                     i2l1896:
  2058                           
  2059                           ;i2c.c: 126: }
  2060                           ;i2c.c: 128: SSPCON1bits.CKP = 1;
  2061  00057E  88C6               	bsf	4038,4,c	;volatile
  2062  000580  0012               	return		;funcret
  2063  000582                     __end_of_I2C_ISR:
  2064                           	opt stack 0
  2065                           pclatu	equ	0xFFB
  2066                           pclath	equ	0xFFA
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           prodh	equ	0xFF4
  2072                           prodl	equ	0xFF3
  2073                           intcon	equ	0xFF2
  2074                           postinc0	equ	0xFEE
  2075                           fsr0h	equ	0xFEA
  2076                           fsr0l	equ	0xFE9
  2077                           wreg	equ	0xFE8
  2078                           postdec1	equ	0xFE5
  2079                           fsr1h	equ	0xFE2
  2080                           fsr1l	equ	0xFE1
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _I2C_StatusCallback *****************
  2086 ;; Defined at:
  2087 ;;		line 212 in file "mcc_generated_files/i2c.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  i2c_bus_stat    1    wreg     enum E18217
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  i2c_bus_stat    1   12[COMRAM] enum E18217
  2092 ;;  data            1   13[COMRAM] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2106 ;;Total ram usage:        2 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    3
  2109 ;; This function calls:
  2110 ;;		_getByteToSend
  2111 ;;		_handleByteReceived
  2112 ;; This function is called by:
  2113 ;;		_I2C_ISR
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text16
  2118  0005BE                     __ptext16:
  2119                           	opt stack 0
  2120  0005BE                     _I2C_StatusCallback:
  2121                           	opt stack 22
  2122                           
  2123                           ;incstack = 0
  2124                           ;I2C_StatusCallback@i2c_bus_state stored from wreg
  2125  0005BE  6E0D               	movwf	I2C_StatusCallback@i2c_bus_state,c
  2126                           
  2127                           ;i2c.c: 213: uint8_t data;
  2128                           ;i2c.c: 214: switch (i2c_bus_state) {
  2129  0005C0  D00C               	goto	i2l1830
  2130  0005C2                     i2l194:
  2131                           
  2132                           ;i2c.c: 224: data = I2C_slaveWriteData;
  2133  0005C2  C03F  F00E         	movff	_I2C_slaveWriteData,I2C_StatusCallback@data	;volatile
  2134                           
  2135                           ;i2c.c: 226: handleByteReceived(data);
  2136  0005C6  500E               	movf	I2C_StatusCallback@data,w,c
  2137  0005C8  ECD4  F000         	call	_handleByteReceived
  2138                           
  2139                           ;i2c.c: 228: break;
  2140  0005CC  0012               	return	
  2141  0005CE                     i2l1826:
  2142                           
  2143                           ;i2c.c: 231: data = 5;
  2144  0005CE  0E05               	movlw	5
  2145  0005D0  6E0E               	movwf	I2C_StatusCallback@data,c
  2146                           
  2147                           ;i2c.c: 232: {
  2148                           ;i2c.c: 235: }
  2149                           ;i2c.c: 237: SSPBUF = getByteToSend();
  2150  0005D2  ECC1  F002         	call	_getByteToSend	;wreg free
  2151  0005D6  6EC9               	movwf	4041,c	;volatile
  2152                           
  2153                           ;i2c.c: 244: }
  2154                           
  2155                           ;i2c.c: 242: default:;
  2156                           
  2157                           ;i2c.c: 241: case I2C_SLAVE_READ_COMPLETED:
  2158                           
  2159                           ;i2c.c: 239: break;
  2160  0005D8  0012               	return	
  2161  0005DA                     i2l1830:
  2162  0005DA  500D               	movf	I2C_StatusCallback@i2c_bus_state,w,c
  2163                           
  2164                           ; Switch size 1, requested type "space"
  2165                           ; Number of cases is 4, Range of values is 0 to 3
  2166                           ; switch strategies available:
  2167                           ; Name         Instructions Cycles
  2168                           ; simple_byte           13     7 (average)
  2169                           ;	Chosen strategy is simple_byte
  2170  0005DC  0A00               	xorlw	0	; case 0
  2171  0005DE  B4D8               	btfsc	status,2,c
  2172  0005E0  0012               	return	
  2173  0005E2  0A01               	xorlw	1	; case 1
  2174  0005E4  B4D8               	btfsc	status,2,c
  2175  0005E6  D7F3               	goto	i2l1826
  2176  0005E8  0A03               	xorlw	3	; case 2
  2177  0005EA  B4D8               	btfsc	status,2,c
  2178  0005EC  D7EA               	goto	i2l194
  2179  0005EE  0A01               	xorlw	1	; case 3
  2180  0005F0  0012               	return	
  2181  0005F2                     __end_of_I2C_StatusCallback:
  2182                           	opt stack 0
  2183                           pclatu	equ	0xFFB
  2184                           pclath	equ	0xFFA
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           intcon	equ	0xFF2
  2192                           postinc0	equ	0xFEE
  2193                           fsr0h	equ	0xFEA
  2194                           fsr0l	equ	0xFE9
  2195                           wreg	equ	0xFE8
  2196                           postdec1	equ	0xFE5
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           fsr2h	equ	0xFDA
  2200                           fsr2l	equ	0xFD9
  2201                           status	equ	0xFD8
  2202                           
  2203 ;; *************** function _handleByteReceived *****************
  2204 ;; Defined at:
  2205 ;;		line 128 in file "ax.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  data            1    wreg     unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  data            1   11[COMRAM] unsigned char 
  2210 ;;  value           2    9[COMRAM] int 
  2211 ;;  xhigh           1    8[COMRAM] unsigned char 
  2212 ;;  xlow            1    7[COMRAM] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2223 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;Total ram usage:        5 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    2
  2229 ;; This function calls:
  2230 ;;		_getADC
  2231 ;;		_setLedOff
  2232 ;;		_setLedOn
  2233 ;; This function is called by:
  2234 ;;		_I2C_StatusCallback
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text17
  2239  0001A8                     __ptext17:
  2240                           	opt stack 0
  2241  0001A8                     _handleByteReceived:
  2242                           	opt stack 22
  2243                           
  2244                           ;incstack = 0
  2245                           ;handleByteReceived@data stored from wreg
  2246  0001A8  6E0C               	movwf	handleByteReceived@data,c
  2247                           
  2248                           ;ax.c: 129: if (readIndex == 0) {
  2249  0001AA  5035               	movf	_readIndex,w,c
  2250  0001AC  1036               	iorwf	_readIndex+1,w,c
  2251  0001AE  A4D8               	btfss	status,2,c
  2252  0001B0  D005               	goto	i2l1744
  2253                           
  2254                           ;ax.c: 130: currentCommand = data;
  2255  0001B2  C00C  F039         	movff	handleByteReceived@data,_currentCommand
  2256                           
  2257                           ;ax.c: 131: readIndex++;
  2258  0001B6  4A35               	infsnz	_readIndex,f,c
  2259  0001B8  2A36               	incf	_readIndex+1,f,c
  2260                           
  2261                           ;ax.c: 132: } else if (readIndex == 1) {
  2262  0001BA  0012               	return	
  2263  0001BC                     i2l1744:
  2264  0001BC  0435               	decf	_readIndex,w,c
  2265  0001BE  1036               	iorwf	_readIndex+1,w,c
  2266  0001C0  A4D8               	btfss	status,2,c
  2267  0001C2  D049               	goto	i2l1786
  2268                           
  2269                           ;ax.c: 133: parameter1 = data;
  2270  0001C4  C00C  F03A         	movff	handleByteReceived@data,_parameter1
  2271                           
  2272                           ;ax.c: 134: readIndex = 0;
  2273  0001C8  0E00               	movlw	0
  2274  0001CA  6E36               	movwf	_readIndex+1,c
  2275  0001CC  0E00               	movlw	0
  2276  0001CE  6E35               	movwf	_readIndex,c
  2277                           
  2278                           ;ax.c: 135: if (currentCommand == 10) {
  2279  0001D0  0E0A               	movlw	10
  2280  0001D2  1839               	xorwf	_currentCommand,w,c
  2281  0001D4  A4D8               	btfss	status,2,c
  2282  0001D6  D006               	goto	i2l1754
  2283                           
  2284                           ;ax.c: 136: setLedOn(parameter1);
  2285  0001D8  C03A  F001         	movff	_parameter1,setLedOn@led
  2286  0001DC  6A02               	clrf	setLedOn@led+1,c
  2287  0001DE  ECC5  F001         	call	_setLedOn	;wreg free
  2288                           
  2289                           ;ax.c: 137: } else if (currentCommand == 11) {
  2290  0001E2  0012               	return	
  2291  0001E4                     i2l1754:
  2292  0001E4  0E0B               	movlw	11
  2293  0001E6  1839               	xorwf	_currentCommand,w,c
  2294  0001E8  A4D8               	btfss	status,2,c
  2295  0001EA  D006               	goto	i2l1758
  2296                           
  2297                           ;ax.c: 138: setLedOff(parameter1);
  2298  0001EC  C03A  F001         	movff	_parameter1,setLedOff@led
  2299  0001F0  6A02               	clrf	setLedOff@led+1,c
  2300  0001F2  EC02  F002         	call	_setLedOff	;wreg free
  2301                           
  2302                           ;ax.c: 139: } else if (currentCommand == 12) {
  2303  0001F6  0012               	return	
  2304  0001F8                     i2l1758:
  2305  0001F8  0E0C               	movlw	12
  2306  0001FA  1839               	xorwf	_currentCommand,w,c
  2307  0001FC  A4D8               	btfss	status,2,c
  2308  0001FE  D01A               	goto	i2l1774
  2309                           
  2310                           ;ax.c: 140: int value = getADC(parameter1);
  2311  000200  C03A  F006         	movff	_parameter1,getADC@adc
  2312  000204  6A07               	clrf	getADC@adc+1,c
  2313  000206  EC91  F003         	call	_getADC	;wreg free
  2314  00020A  C006  F00A         	movff	?_getADC,handleByteReceived@value
  2315  00020E  C007  F00B         	movff	?_getADC+1,handleByteReceived@value+1
  2316                           
  2317                           ;ax.c: 141: bytesSent = 0;
  2318  000212  0E00               	movlw	0
  2319  000214  6E32               	movwf	_bytesSent+1,c
  2320  000216  0E00               	movlw	0
  2321  000218  6E31               	movwf	_bytesSent,c
  2322                           
  2323                           ;ax.c: 142: nbBytesToSend = 2;
  2324  00021A  0E00               	movlw	0
  2325  00021C  6E34               	movwf	_nbBytesToSend+1,c
  2326  00021E  0E02               	movlw	2
  2327  000220  6E33               	movwf	_nbBytesToSend,c
  2328                           
  2329                           ;ax.c: 143: uint8_t xlow = value & 0xff;
  2330  000222  C00A  F008         	movff	handleByteReceived@value,handleByteReceived@xlow
  2331                           
  2332                           ;ax.c: 144: uint8_t xhigh = (value >> 8);
  2333  000226  500B               	movf	handleByteReceived@value+1,w,c
  2334  000228  6E09               	movwf	handleByteReceived@xhigh,c
  2335                           
  2336                           ;ax.c: 145: dataToSend[0] = xlow;
  2337  00022A  C008  F0E0         	movff	handleByteReceived@xlow,_dataToSend
  2338                           
  2339                           ;ax.c: 146: dataToSend[1] = xhigh;
  2340  00022E  C009  F0E1         	movff	handleByteReceived@xhigh,_dataToSend+1
  2341                           
  2342                           ;ax.c: 147: } else if (currentCommand == 20) {
  2343  000232  0012               	return	
  2344  000234                     i2l1774:
  2345  000234  0E14               	movlw	20
  2346  000236  1839               	xorwf	_currentCommand,w,c
  2347  000238  B4D8               	btfsc	status,2,c
  2348  00023A  0012               	return	
  2349                           
  2350                           ;ax.c: 150: } else if (currentCommand == 21) {
  2351  00023C  0E15               	movlw	21
  2352  00023E  1839               	xorwf	_currentCommand,w,c
  2353  000240  B4D8               	btfsc	status,2,c
  2354  000242  0012               	return	
  2355                           
  2356                           ;ax.c: 154: } else if (currentCommand == 22) {
  2357  000244  0E16               	movlw	22
  2358  000246  1839               	xorwf	_currentCommand,w,c
  2359  000248  A4D8               	btfss	status,2,c
  2360  00024A  0012               	return	
  2361                           
  2362                           ;ax.c: 155: readIndex = 2;
  2363  00024C  0E00               	movlw	0
  2364  00024E  6E36               	movwf	_readIndex+1,c
  2365  000250  0E02               	movlw	2
  2366  000252  6E35               	movwf	_readIndex,c
  2367                           
  2368                           ;ax.c: 159: }
  2369                           ;ax.c: 161: } else if (readIndex == 2) {
  2370                           
  2371                           ;ax.c: 157: } else {
  2372  000254  0012               	return	
  2373  000256                     i2l1786:
  2374  000256  0E02               	movlw	2
  2375  000258  1835               	xorwf	_readIndex,w,c
  2376  00025A  1036               	iorwf	_readIndex+1,w,c
  2377  00025C  A4D8               	btfss	status,2,c
  2378  00025E  D003               	goto	i2l1794
  2379                           
  2380                           ;ax.c: 162: parameter2 = data;
  2381  000260  C00C  F03B         	movff	handleByteReceived@data,_parameter2
  2382                           
  2383                           ;ax.c: 169: }
  2384                           ;ax.c: 171: } else if (readIndex == 3) {
  2385                           
  2386                           ;ax.c: 167: } else {
  2387  000264  0012               	return	
  2388  000266                     i2l1794:
  2389  000266  0E03               	movlw	3
  2390  000268  1835               	xorwf	_readIndex,w,c
  2391  00026A  1036               	iorwf	_readIndex+1,w,c
  2392  00026C  A4D8               	btfss	status,2,c
  2393  00026E  0012               	return	
  2394                           
  2395                           ;ax.c: 172: parameter3 = data;
  2396  000270  C00C  F03C         	movff	handleByteReceived@data,_parameter3
  2397                           
  2398                           ;ax.c: 173: if (currentCommand == 22) {
  2399  000274  0E16               	movlw	22
  2400  000276  1839               	xorwf	_currentCommand,w,c
  2401  000278  A4D8               	btfss	status,2,c
  2402  00027A  0012               	return	
  2403                           
  2404                           ;ax.c: 176: readIndex = 0;
  2405  00027C  0E00               	movlw	0
  2406  00027E  6E36               	movwf	_readIndex+1,c
  2407  000280  0E00               	movlw	0
  2408  000282  6E35               	movwf	_readIndex,c
  2409                           
  2410                           ;ax.c: 177: } else {
  2411  000284  0012               	return	
  2412  000286                     __end_of_handleByteReceived:
  2413                           	opt stack 0
  2414                           pclatu	equ	0xFFB
  2415                           pclath	equ	0xFFA
  2416                           tblptru	equ	0xFF8
  2417                           tblptrh	equ	0xFF7
  2418                           tblptrl	equ	0xFF6
  2419                           tablat	equ	0xFF5
  2420                           prodh	equ	0xFF4
  2421                           prodl	equ	0xFF3
  2422                           intcon	equ	0xFF2
  2423                           postinc0	equ	0xFEE
  2424                           fsr0h	equ	0xFEA
  2425                           fsr0l	equ	0xFE9
  2426                           wreg	equ	0xFE8
  2427                           postdec1	equ	0xFE5
  2428                           fsr1h	equ	0xFE2
  2429                           fsr1l	equ	0xFE1
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _setLedOn *****************
  2435 ;; Defined at:
  2436 ;;		line 25 in file "ax.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  led             2    0[COMRAM] int 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;Total ram usage:        4 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_handleByteReceived
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text18
  2464  00038A                     __ptext18:
  2465                           	opt stack 0
  2466  00038A                     _setLedOn:
  2467                           	opt stack 23
  2468                           
  2469                           ;ax.c: 26: switch (led) {
  2470                           
  2471                           ;incstack = 0
  2472  00038A  D014               	goto	i2l1718
  2473  00038C                     i2l472:
  2474  00038C  868C               	bsf	3980,3,c	;volatile
  2475                           
  2476                           ;ax.c: 29: break;
  2477  00038E  0012               	return	
  2478  000390                     i2l476:
  2479  000390  848C               	bsf	3980,2,c	;volatile
  2480                           
  2481                           ;ax.c: 32: break;
  2482  000392  0012               	return	
  2483  000394                     i2l479:
  2484  000394  828C               	bsf	3980,1,c	;volatile
  2485                           
  2486                           ;ax.c: 35: break;
  2487  000396  0012               	return	
  2488  000398                     i2l482:
  2489  000398  808C               	bsf	3980,0,c	;volatile
  2490                           
  2491                           ;ax.c: 38: break;
  2492  00039A  0012               	return	
  2493  00039C                     i2l485:
  2494  00039C  848B               	bsf	3979,2,c	;volatile
  2495                           
  2496                           ;ax.c: 41: break;
  2497  00039E  0012               	return	
  2498  0003A0                     i2l488:
  2499  0003A0  828B               	bsf	3979,1,c	;volatile
  2500                           
  2501                           ;ax.c: 44: break;
  2502  0003A2  0012               	return	
  2503  0003A4                     i2l491:
  2504  0003A4  808B               	bsf	3979,0,c	;volatile
  2505                           
  2506                           ;ax.c: 47: break;
  2507  0003A6  0012               	return	
  2508  0003A8                     i2l494:
  2509  0003A8  808A               	bsf	3978,0,c	;volatile
  2510                           
  2511                           ;ax.c: 50: break;
  2512  0003AA  0012               	return	
  2513  0003AC                     i2l497:
  2514  0003AC  848A               	bsf	3978,2,c	;volatile
  2515                           
  2516                           ;ax.c: 53: break;
  2517  0003AE  0012               	return	
  2518  0003B0                     i2l500:
  2519  0003B0  868A               	bsf	3978,3,c	;volatile
  2520                           
  2521                           ;ax.c: 57: }
  2522                           
  2523                           ;ax.c: 56: break;
  2524  0003B2  0012               	return	
  2525  0003B4                     i2l1718:
  2526  0003B4  C001  F003         	movff	setLedOn@led,??_setLedOn
  2527  0003B8  C002  F004         	movff	setLedOn@led+1,??_setLedOn+1
  2528                           
  2529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2530                           ; Switch size 1, requested type "space"
  2531                           ; Number of cases is 1, Range of values is 0 to 0
  2532                           ; switch strategies available:
  2533                           ; Name         Instructions Cycles
  2534                           ; simple_byte            4     3 (average)
  2535                           ;	Chosen strategy is simple_byte
  2536  0003BC  5004               	movf	??_setLedOn+1,w,c
  2537  0003BE  0A00               	xorlw	0	; case 0
  2538  0003C0  A4D8               	btfss	status,2,c
  2539  0003C2  0012               	return	
  2540                           
  2541                           ; Switch size 1, requested type "space"
  2542                           ; Number of cases is 10, Range of values is 1 to 10
  2543                           ; switch strategies available:
  2544                           ; Name         Instructions Cycles
  2545                           ; simple_byte           31    16 (average)
  2546                           ;	Chosen strategy is simple_byte
  2547  0003C4  5003               	movf	??_setLedOn,w,c
  2548  0003C6  0A01               	xorlw	1	; case 1
  2549  0003C8  B4D8               	btfsc	status,2,c
  2550  0003CA  D7E0               	goto	i2l472
  2551  0003CC  0A03               	xorlw	3	; case 2
  2552  0003CE  B4D8               	btfsc	status,2,c
  2553  0003D0  D7DF               	goto	i2l476
  2554  0003D2  0A01               	xorlw	1	; case 3
  2555  0003D4  B4D8               	btfsc	status,2,c
  2556  0003D6  D7DE               	goto	i2l479
  2557  0003D8  0A07               	xorlw	7	; case 4
  2558  0003DA  B4D8               	btfsc	status,2,c
  2559  0003DC  D7DD               	goto	i2l482
  2560  0003DE  0A01               	xorlw	1	; case 5
  2561  0003E0  B4D8               	btfsc	status,2,c
  2562  0003E2  D7DC               	goto	i2l485
  2563  0003E4  0A03               	xorlw	3	; case 6
  2564  0003E6  B4D8               	btfsc	status,2,c
  2565  0003E8  D7DB               	goto	i2l488
  2566  0003EA  0A01               	xorlw	1	; case 7
  2567  0003EC  B4D8               	btfsc	status,2,c
  2568  0003EE  D7DA               	goto	i2l491
  2569  0003F0  0A0F               	xorlw	15	; case 8
  2570  0003F2  B4D8               	btfsc	status,2,c
  2571  0003F4  D7D9               	goto	i2l494
  2572  0003F6  0A01               	xorlw	1	; case 9
  2573  0003F8  B4D8               	btfsc	status,2,c
  2574  0003FA  D7D8               	goto	i2l497
  2575  0003FC  0A03               	xorlw	3	; case 10
  2576  0003FE  A4D8               	btfss	status,2,c
  2577  000400  0012               	return	
  2578  000402  D7D6               	goto	i2l500
  2579  000404                     __end_of_setLedOn:
  2580                           	opt stack 0
  2581                           pclatu	equ	0xFFB
  2582                           pclath	equ	0xFFA
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           prodh	equ	0xFF4
  2588                           prodl	equ	0xFF3
  2589                           intcon	equ	0xFF2
  2590                           postinc0	equ	0xFEE
  2591                           fsr0h	equ	0xFEA
  2592                           fsr0l	equ	0xFE9
  2593                           wreg	equ	0xFE8
  2594                           postdec1	equ	0xFE5
  2595                           fsr1h	equ	0xFE2
  2596                           fsr1l	equ	0xFE1
  2597                           fsr2h	equ	0xFDA
  2598                           fsr2l	equ	0xFD9
  2599                           status	equ	0xFD8
  2600                           
  2601 ;; *************** function _setLedOff *****************
  2602 ;; Defined at:
  2603 ;;		line 60 in file "ax.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  led             2    0[COMRAM] int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;Total ram usage:        4 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_handleByteReceived
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text19
  2631  000404                     __ptext19:
  2632                           	opt stack 0
  2633  000404                     _setLedOff:
  2634                           	opt stack 23
  2635                           
  2636                           ;ax.c: 61: switch (led) {
  2637                           
  2638                           ;incstack = 0
  2639  000404  D014               	goto	i2l1728
  2640  000406                     i2l507:
  2641  000406  968C               	bcf	3980,3,c	;volatile
  2642                           
  2643                           ;ax.c: 64: break;
  2644  000408  0012               	return	
  2645  00040A                     i2l511:
  2646  00040A  948C               	bcf	3980,2,c	;volatile
  2647                           
  2648                           ;ax.c: 67: break;
  2649  00040C  0012               	return	
  2650  00040E                     i2l514:
  2651  00040E  928C               	bcf	3980,1,c	;volatile
  2652                           
  2653                           ;ax.c: 70: break;
  2654  000410  0012               	return	
  2655  000412                     i2l517:
  2656  000412  908C               	bcf	3980,0,c	;volatile
  2657                           
  2658                           ;ax.c: 73: break;
  2659  000414  0012               	return	
  2660  000416                     i2l520:
  2661  000416  948B               	bcf	3979,2,c	;volatile
  2662                           
  2663                           ;ax.c: 76: break;
  2664  000418  0012               	return	
  2665  00041A                     i2l523:
  2666  00041A  928B               	bcf	3979,1,c	;volatile
  2667                           
  2668                           ;ax.c: 79: break;
  2669  00041C  0012               	return	
  2670  00041E                     i2l526:
  2671  00041E  908B               	bcf	3979,0,c	;volatile
  2672                           
  2673                           ;ax.c: 82: break;
  2674  000420  0012               	return	
  2675  000422                     i2l529:
  2676  000422  908A               	bcf	3978,0,c	;volatile
  2677                           
  2678                           ;ax.c: 85: break;
  2679  000424  0012               	return	
  2680  000426                     i2l532:
  2681  000426  948A               	bcf	3978,2,c	;volatile
  2682                           
  2683                           ;ax.c: 88: break;
  2684  000428  0012               	return	
  2685  00042A                     i2l535:
  2686  00042A  968A               	bcf	3978,3,c	;volatile
  2687                           
  2688                           ;ax.c: 92: }
  2689                           
  2690                           ;ax.c: 91: break;
  2691  00042C  0012               	return	
  2692  00042E                     i2l1728:
  2693  00042E  C001  F003         	movff	setLedOff@led,??_setLedOff
  2694  000432  C002  F004         	movff	setLedOff@led+1,??_setLedOff+1
  2695                           
  2696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2697                           ; Switch size 1, requested type "space"
  2698                           ; Number of cases is 1, Range of values is 0 to 0
  2699                           ; switch strategies available:
  2700                           ; Name         Instructions Cycles
  2701                           ; simple_byte            4     3 (average)
  2702                           ;	Chosen strategy is simple_byte
  2703  000436  5004               	movf	??_setLedOff+1,w,c
  2704  000438  0A00               	xorlw	0	; case 0
  2705  00043A  A4D8               	btfss	status,2,c
  2706  00043C  0012               	return	
  2707                           
  2708                           ; Switch size 1, requested type "space"
  2709                           ; Number of cases is 10, Range of values is 1 to 10
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte           31    16 (average)
  2713                           ;	Chosen strategy is simple_byte
  2714  00043E  5003               	movf	??_setLedOff,w,c
  2715  000440  0A01               	xorlw	1	; case 1
  2716  000442  B4D8               	btfsc	status,2,c
  2717  000444  D7E0               	goto	i2l507
  2718  000446  0A03               	xorlw	3	; case 2
  2719  000448  B4D8               	btfsc	status,2,c
  2720  00044A  D7DF               	goto	i2l511
  2721  00044C  0A01               	xorlw	1	; case 3
  2722  00044E  B4D8               	btfsc	status,2,c
  2723  000450  D7DE               	goto	i2l514
  2724  000452  0A07               	xorlw	7	; case 4
  2725  000454  B4D8               	btfsc	status,2,c
  2726  000456  D7DD               	goto	i2l517
  2727  000458  0A01               	xorlw	1	; case 5
  2728  00045A  B4D8               	btfsc	status,2,c
  2729  00045C  D7DC               	goto	i2l520
  2730  00045E  0A03               	xorlw	3	; case 6
  2731  000460  B4D8               	btfsc	status,2,c
  2732  000462  D7DB               	goto	i2l523
  2733  000464  0A01               	xorlw	1	; case 7
  2734  000466  B4D8               	btfsc	status,2,c
  2735  000468  D7DA               	goto	i2l526
  2736  00046A  0A0F               	xorlw	15	; case 8
  2737  00046C  B4D8               	btfsc	status,2,c
  2738  00046E  D7D9               	goto	i2l529
  2739  000470  0A01               	xorlw	1	; case 9
  2740  000472  B4D8               	btfsc	status,2,c
  2741  000474  D7D8               	goto	i2l532
  2742  000476  0A03               	xorlw	3	; case 10
  2743  000478  A4D8               	btfss	status,2,c
  2744  00047A  0012               	return	
  2745  00047C  D7D6               	goto	i2l535
  2746  00047E                     __end_of_setLedOff:
  2747                           	opt stack 0
  2748                           pclatu	equ	0xFFB
  2749                           pclath	equ	0xFFA
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           postinc0	equ	0xFEE
  2758                           fsr0h	equ	0xFEA
  2759                           fsr0l	equ	0xFE9
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _getADC *****************
  2769 ;; Defined at:
  2770 ;;		line 101 in file "ax.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  adc             2    5[COMRAM] int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  2    5[COMRAM] int 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2788 ;;Total ram usage:        2 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    1
  2791 ;; This function calls:
  2792 ;;		_ADC_GetConversion
  2793 ;; This function is called by:
  2794 ;;		_handleByteReceived
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text20
  2799  000722                     __ptext20:
  2800                           	opt stack 0
  2801  000722                     _getADC:
  2802                           	opt stack 22
  2803                           
  2804                           ;ax.c: 102: return ADC_GetConversion(adc);
  2805                           
  2806                           ;incstack = 0
  2807  000722  5006               	movf	getADC@adc,w,c
  2808  000724  ECF9  F002         	call	_ADC_GetConversion
  2809  000728  C001  F006         	movff	?_ADC_GetConversion,?_getADC
  2810  00072C  C002  F007         	movff	?_ADC_GetConversion+1,?_getADC+1
  2811  000730  0012               	return	
  2812  000732                     __end_of_getADC:
  2813                           	opt stack 0
  2814                           pclatu	equ	0xFFB
  2815                           pclath	equ	0xFFA
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           fsr0h	equ	0xFEA
  2825                           fsr0l	equ	0xFE9
  2826                           wreg	equ	0xFE8
  2827                           postdec1	equ	0xFE5
  2828                           fsr1h	equ	0xFE2
  2829                           fsr1l	equ	0xFE1
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function _ADC_GetConversion *****************
  2835 ;; Defined at:
  2836 ;;		line 104 in file "mcc_generated_files/adc.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  channel         1    wreg     enum E18216
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  channel         1    4[COMRAM] enum E18216
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2    0[COMRAM] unsigned int 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2853 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2854 ;;Total ram usage:        5 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_getADC
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text21
  2864  0005F2                     __ptext21:
  2865                           	opt stack 0
  2866  0005F2                     _ADC_GetConversion:
  2867                           	opt stack 22
  2868                           
  2869                           ;incstack = 0
  2870                           ;ADC_GetConversion@channel stored from wreg
  2871  0005F2  6E05               	movwf	ADC_GetConversion@channel,c
  2872                           
  2873                           ;adc.c: 107: ADCON0bits.CHS = channel;
  2874  0005F4  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2875  0005F8  4603               	rlncf	??_ADC_GetConversion,f,c
  2876  0005FA  4603               	rlncf	??_ADC_GetConversion,f,c
  2877  0005FC  50C2               	movf	4034,w,c	;volatile
  2878  0005FE  1803               	xorwf	??_ADC_GetConversion,w,c
  2879  000600  0B83               	andlw	-125
  2880  000602  1803               	xorwf	??_ADC_GetConversion,w,c
  2881  000604  6EC2               	movwf	4034,c	;volatile
  2882                           
  2883                           ;adc.c: 110: ADCON0bits.ADON = 1;
  2884  000606  80C2               	bsf	4034,0,c	;volatile
  2885                           
  2886                           ;adc.c: 114: ADCON0bits.GO_nDONE = 1;
  2887  000608  82C2               	bsf	4034,1,c	;volatile
  2888  00060A                     i2l311:
  2889  00060A  B2C2               	btfsc	4034,1,c	;volatile
  2890  00060C  D7FE               	goto	i2l311
  2891                           
  2892                           ;adc.c: 119: }
  2893                           ;adc.c: 122: return ((ADRESH << 8) + ADRESL);
  2894  00060E  50C4               	movf	4036,w,c	;volatile
  2895  000610  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2896  000612  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  2897  000614  50C3               	movf	4035,w,c	;volatile
  2898  000616  2403               	addwf	??_ADC_GetConversion,w,c
  2899  000618  6E01               	movwf	?_ADC_GetConversion,c
  2900  00061A  0E00               	movlw	0
  2901  00061C  2004               	addwfc	??_ADC_GetConversion+1,w,c
  2902  00061E  6E02               	movwf	?_ADC_GetConversion+1,c
  2903  000620  0012               	return	
  2904  000622                     __end_of_ADC_GetConversion:
  2905                           	opt stack 0
  2906                           pclatu	equ	0xFFB
  2907                           pclath	equ	0xFFA
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           intcon	equ	0xFF2
  2915                           postinc0	equ	0xFEE
  2916                           fsr0h	equ	0xFEA
  2917                           fsr0l	equ	0xFE9
  2918                           wreg	equ	0xFE8
  2919                           postdec1	equ	0xFE5
  2920                           fsr1h	equ	0xFE2
  2921                           fsr1l	equ	0xFE1
  2922                           fsr2h	equ	0xFDA
  2923                           fsr2l	equ	0xFD9
  2924                           status	equ	0xFD8
  2925                           
  2926 ;; *************** function _getByteToSend *****************
  2927 ;; Defined at:
  2928 ;;		line 187 in file "ax.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  d               1    1[COMRAM] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      unsigned char 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;Total ram usage:        2 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_I2C_StatusCallback
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text22
  2956  000582                     __ptext22:
  2957                           	opt stack 0
  2958  000582                     _getByteToSend:
  2959                           	opt stack 24
  2960                           
  2961                           ;ax.c: 188: if (nbBytesToSend == 0) {
  2962                           
  2963                           ;incstack = 0
  2964  000582  5033               	movf	_nbBytesToSend,w,c
  2965  000584  1034               	iorwf	_nbBytesToSend+1,w,c
  2966  000586  A4D8               	btfss	status,2,c
  2967  000588  D002               	goto	i2l1808
  2968                           
  2969                           ;ax.c: 190: return 0;
  2970  00058A  0E00               	movlw	0
  2971  00058C  0012               	return	
  2972  00058E                     i2l1808:
  2973                           
  2974                           ;ax.c: 191: }
  2975                           ;ax.c: 192: uint8_t d = dataToSend[bytesSent];
  2976  00058E  0EE0               	movlw	low _dataToSend
  2977  000590  2431               	addwf	_bytesSent,w,c
  2978  000592  6ED9               	movwf	fsr2l,c
  2979  000594  0E00               	movlw	high _dataToSend
  2980  000596  2032               	addwfc	_bytesSent+1,w,c
  2981  000598  6EDA               	movwf	fsr2h,c
  2982  00059A  50DF               	movf	indf2,w,c
  2983  00059C  6E02               	movwf	getByteToSend@d,c
  2984                           
  2985                           ;ax.c: 193: bytesSent++;
  2986  00059E  4A31               	infsnz	_bytesSent,f,c
  2987  0005A0  2A32               	incf	_bytesSent+1,f,c
  2988                           
  2989                           ;ax.c: 194: if (bytesSent >= nbBytesToSend) {
  2990  0005A2  5033               	movf	_nbBytesToSend,w,c
  2991  0005A4  5C31               	subwf	_bytesSent,w,c
  2992  0005A6  5032               	movf	_bytesSent+1,w,c
  2993  0005A8  0A80               	xorlw	128
  2994  0005AA  6E01               	movwf	??_getByteToSend& (0+255),c
  2995  0005AC  5034               	movf	_nbBytesToSend+1,w,c
  2996  0005AE  0A80               	xorlw	128
  2997  0005B0  5801               	subwfb	??_getByteToSend& (0+255),w,c
  2998  0005B2  A0D8               	btfss	status,0,c
  2999  0005B4  D002               	goto	i2l1818
  3000                           
  3001                           ;ax.c: 196: return 0;
  3002  0005B6  0E00               	movlw	0
  3003  0005B8  0012               	return	
  3004  0005BA                     i2l1818:
  3005                           
  3006                           ;ax.c: 197: }
  3007                           ;ax.c: 198: return d;
  3008  0005BA  5002               	movf	getByteToSend@d,w,c
  3009  0005BC  0012               	return	
  3010  0005BE                     __end_of_getByteToSend:
  3011                           	opt stack 0
  3012  0000                     pclatu	equ	0xFFB
  3013                           pclath	equ	0xFFA
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           intcon	equ	0xFF2
  3021                           postinc0	equ	0xFEE
  3022                           fsr0h	equ	0xFEA
  3023                           fsr0l	equ	0xFE9
  3024                           wreg	equ	0xFE8
  3025                           postdec1	equ	0xFE5
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           indf2	equ	0xFDF
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           pclatu	equ	0xFFB
  3033                           pclath	equ	0xFFA
  3034                           tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           postinc0	equ	0xFEE
  3042                           fsr0h	equ	0xFEA
  3043                           fsr0l	equ	0xFE9
  3044                           wreg	equ	0xFE8
  3045                           postdec1	equ	0xFE5
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           fsr2h	equ	0xFDA
  3050                           fsr2l	equ	0xFD9
  3051                           status	equ	0xFD8
  3052                           
  3053                           	psect	rparam
  3054  0000                     pclatu	equ	0xFFB
  3055                           pclath	equ	0xFFA
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           prodh	equ	0xFF4
  3061                           prodl	equ	0xFF3
  3062                           intcon	equ	0xFF2
  3063                           postinc0	equ	0xFEE
  3064                           fsr0h	equ	0xFEA
  3065                           fsr0l	equ	0xFE9
  3066                           wreg	equ	0xFE8
  3067                           postdec1	equ	0xFE5
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           fsr2h	equ	0xFDA
  3072                           fsr2l	equ	0xFD9
  3073                           status	equ	0xFD8
  3074                           
  3075                           	psect	temp
  3076  000040                     btemp:
  3077                           	opt stack 0
  3078  000040                     	ds	1
  3079  0000                     int$flags	set	btemp
  3080                           pclatu	equ	0xFFB
  3081                           pclath	equ	0xFFA
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           intcon	equ	0xFF2
  3089                           postinc0	equ	0xFEE
  3090                           fsr0h	equ	0xFEA
  3091                           fsr0l	equ	0xFE9
  3092                           wreg	equ	0xFE8
  3093                           postdec1	equ	0xFE5
  3094                           fsr1h	equ	0xFE2
  3095                           fsr1l	equ	0xFE1
  3096                           indf2	equ	0xFDF
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        129
    BSS         44
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      63
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_ms
    _delay_ms->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_StatusCallback
    _I2C_StatusCallback->_handleByteReceived
    _handleByteReceived->_getADC
    _getADC->_ADC_GetConversion

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1368
                                             44 COMRAM     4     4      0
                  _SYSTEM_Initialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             7     5      2    1079
                                             37 COMRAM     7     5      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     386
                                             29 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _ECCP1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             29 COMRAM     2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     489
                                             15 COMRAM    14    14      0
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              1     1      0     489
                                             14 COMRAM     1     1      0
                 _I2C_StatusCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_StatusCallback                                   2     2      0     465
                                             12 COMRAM     2     2      0
                      _getByteToSend
                 _handleByteReceived
 ---------------------------------------------------------------------------------
 (7) _handleByteReceived                                   5     5      0     396
                                              7 COMRAM     5     5      0
                             _getADC
                          _setLedOff
                           _setLedOn
 ---------------------------------------------------------------------------------
 (8) _setLedOn                                             4     2      2      65
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _setLedOff                                            4     2      2      65
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _getADC                                               2     0      2      87
                                              5 COMRAM     2     0      2
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) _getByteToSend                                        2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECCP1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _delay_ms
     ___awdiv

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_ISR
     _I2C_StatusCallback
       _getByteToSend
       _handleByteReceived
         _getADC
           _ADC_GetConversion
         _setLedOff
         _setLedOn

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      3F       1       67.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DF       6        0.0%
DATA                 0      0      DF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Apr 14 20:50:13 2017

                        _SSPSTATbits 000FC7                         ___awdiv@sign 0023  
                        __CFG_BORV$3 000000                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l402 016C  
                                l361 00BA                                  l349 04D6  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u747 0494                                  u757 04CA  
         __end_of_handleByteReceived 0286                      __end_of_I2C_ISR 0582  
                    _timer1ReloadVal 003D                                  wreg 000FE8  
                               l1900 048E                                 l1902 049E  
                               l1840 029A                                 l1906 04C4  
                               l1852 02C0                                 l1854 02C8  
                               l1846 02AA                                 l1872 0300  
                               l1864 02E8                                 l1856 02CC  
                               l1960 00AA                                 l1868 02F2  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 _IPEN 007E87  
                               _WPUB 000F5B                                 _main 008E  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0040  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 008A  
                      __CFG_IESO$OFF 000000                        __CFG_FOSC$HS2 000000  
                      __CFG_MCLRE$ON 000000                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 0012        __end_of_OSCILLATOR_Initialize 0712  
                              ?_main 0001                      __end_of___awdiv 030A  
                    _TMR1_StartTimer 0738                      ___awdiv@divisor 0020  
                              _T1CON 000FCD                                _LATB0 007C50  
                              _LATC0 007C58                                _LATB2 007C52  
                              _LATC1 007C59                                _LATB3 007C53  
                              _LATD0 007C60                                _LATC2 007C5A  
                              _LATD1 007C61                                _LATD2 007C62  
                              _LATD3 007C63                                i2l311 060A  
                              i2l218 004E                                i2l163 0574  
                              i2l500 03B0                                i2l511 040A  
                              i2l159 0568                                i2l520 0416  
                              i2l514 040E                                i2l194 05C2  
                              i2l523 041A                                i2l507 0406  
                              i2l532 0426                                i2l517 0412  
                              i2l526 041E                                i2l535 042A  
                              i2l472 038C                                i2l529 0422  
                              i2l482 0398                                i2l491 03A4  
                              i2l476 0390                                i2l485 039C  
                              i2l494 03A8                                i2l479 0394  
                              i2l488 03A0                                i2l497 03AC  
                    ___awdiv@counter 0022                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                main@i 002D  
            __end_of_TMR1_Initialize 0650                                tablat 000FF5  
                              status 000FD8                      __initialization 04EC  
         __end_of_EUSART1_Initialize 06EA                         __end_of_main 01A8  
                          ??_I2C_ISR 000F          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 002D                        __activetblptr 000002  
                     __CFG_RETEN$OFF 000000           __end_of_EUSART2_Initialize 06D4  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR1H 000FBD  
                             _CCPR1L 000FBC                     ___awdiv@dividend 001E  
                             _T1GCON 000FAA               I2C_StatusCallback@data 000E  
                    __CFG_BBSIZ$BB2K 000000                               i2l1718 03B4  
                             i2l1830 05DA                       __CFG_WDTEN$OFF 000000  
                             i2l1808 058E                               i2l1728 042E  
                             i2l1744 01BC                               i2l1818 05BA  
                             i2l1754 01E4                               i2l1826 05CE  
                             i2l1774 0234                               i2l1758 01F8  
                             i2l1794 0266                               i2l1786 0256  
                             i2l1890 0560                               i2l1896 057E  
                             _RCREG1 000FAE                               _RCREG2 000F7A  
                             _RCSTA1 000FAB                               _RCSTA2 000FA6  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _SPBRG2 000F7B                               _SSPADD 000FC8  
                             _TRISC0 007CA0                               _TRISC1 007CA1  
                             _SSPBUF 000FC9                               _TXREG1 000FAD  
                             _TXREG2 000F79                               _TXSTA1 000FAC  
                             _TXSTA2 000FBA                     __end_of_delay_ms 04EC  
                     __CFG_XINST$OFF 000000              __end_of_TMR1_StartTimer 073C  
                             _getADC 0722                            ??___awdiv 0022  
                     __CFG_STVREN$ON 000000                               clear_0 0524  
                             clear_1 0530                     ___awdiv@quotient 0024  
                 _I2C_StatusCallback 05BE              __size_of_I2C_Initialize 001A  
                   __end_of_setLedOn 0404                         __pdataCOMRAM 003F  
                ?_I2C_StatusCallback 0001                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
           ADC_GetConversion@channel 0005                    ?_ECCP1_Initialize 0001  
      __size_of_INTERRUPT_Initialize 0006                     ?_TMR1_Initialize 0001  
                  _SYSTEM_Initialize 067E                   ??_ECCP1_Initialize 001E  
                         __accesstop 0060              __end_of__initialization 0536  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
               ??_I2C_StatusCallback 000D                       __pcstackCOMRAM 0001  
                       __pidataBANK0 030A                  ??_SYSTEM_Initialize 0020  
              __end_of_getByteToSend 05BE            __end_of_SYSTEM_Initialize 06A4  
                         _dataToSend 00E0                           __pbssBANK0 00E0  
                    __CFG_PLLCFG$OFF 000000                   _handleByteReceived 01A8  
                        setLedOn@led 0001                           __pnvCOMRAM 003D  
                ?_handleByteReceived 0001                   __size_of_setLedOff 007A  
                            ?_getADC 0006                     ?_TMR1_StartTimer 0001  
                            _CCP1CON 000FBB                              _I2C_ISR 0544  
            __size_of_ADC_Initialize 0016                     __CFG_CANMX$PORTB 000000  
                            _REFOCON 000F9A                              _OSCCON2 000FD2  
                          ?_delay_ms 0026                 ??_handleByteReceived 0008  
                            _OSCTUNE 000F9B                              _SPBRGH1 000F7D  
                            _SPBRGH2 000F7C                              _SSPCON1 000FC6  
                            _SSPCON2 000FC5                              _SSPSTAT 000FC7  
                          ?_setLedOn 0001                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                            ___awdiv 0286                      __size_of_getADC 0010  
                            __pcinit 04EC                       _I2C_Initialize 06A4  
                            __ramtop 0F00                              __ptext0 008E  
                            __ptext1 047E                              __ptext2 0286  
                            __ptext3 067E                              __ptext4 0622  
                            __ptext5 0738                              __ptext6 0650  
                            __ptext7 0700                              __ptext8 0732  
                            __ptext9 06A4                           _parameter1 003A  
                         _parameter2 003B                           _parameter3 003C  
                          _T1CONbits 000FCD                _OSCILLATOR_Initialize 0700  
                 _EUSART1_Initialize 06D4             ??_PIN_MANAGER_Initialize 001E  
                  __CFG_MSSPMSK$MSK7 000000                           ??_delay_ms 0028  
                  __end_of_setLedOff 047E           __size_of_SYSTEM_Initialize 0026  
                         delay_ms@ms 0026                 end_of_initialization 0536  
                ?_EUSART1_Initialize 0001               handleByteReceived@data 000C  
 I2C_StatusCallbackOld@EEPROM_Buffer 0060                        __Lmediumconst 0000  
             handleByteReceived@xlow 0008                           ??_setLedOn 0003  
                 _EUSART2_Initialize 06BE                              postdec1 000FE5  
                            postinc0 000FEE               __end_of_I2C_Initialize 06BE  
               ??_EUSART1_Initialize 001E                  ?_EUSART2_Initialize 0001  
                          _PORTCbits 000F82                 ??_EUSART2_Initialize 001E  
                     getByteToSend@d 0002            __size_of_ECCP1_Initialize 0010  
       __end_of_INTERRUPT_Initialize 0738                      ?_I2C_Initialize 0001  
                     __end_of_getADC 0732                        __pidataCOMRAM 073C  
                     _ADC_Initialize 06EA               ?_OSCILLATOR_Initialize 0001  
                start_initialization 04EC      __size_of_PIN_MANAGER_Initialize 002E  
        __size_of_I2C_StatusCallback 0034                       _currentCommand 0039  
           __size_of_TMR1_Initialize 002E                             ??_getADC 0008  
                        _CCPTMRSbits 000F99               __end_of_ADC_Initialize 0700  
                        __pdataBANK0 0060                             ?_I2C_ISR 0001  
                        __pbssCOMRAM 0031                         setLedOff@led 0001  
                  __size_of_delay_ms 006E               __size_of_getByteToSend 003C  
             _PIN_MANAGER_Initialize 0650                    __size_of_setLedOn 007A  
                          __pintcode 0008                             ?___awdiv 001E  
                    ?_ADC_Initialize 0001         ??_INTERRUPT_InterruptManager 0010  
                          getADC@adc 0006                             _BAUDCON1 000FA7  
                           _BAUDCON2 000FB9             __size_of_TMR1_StartTimer 0004  
                      _nbBytesToSend 0033          __size_of_handleByteReceived 00DE  
 I2C_StatusCallbackOld@eepromAddress 0037                            _readIndex 0035  
                          _bytesSent 0031                 _INTERRUPT_Initialize 0732  
                          _setLedOff 0404                            delay_ms@i 002B  
                          delay_ms@n 0029                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0082  
                           _PIR1bits 000F9E                             _PIR3bits 000FA4  
                   _ECCP1_Initialize 0712                        _getByteToSend 0582  
                   __size_of_I2C_ISR 003E                    ??_TMR1_Initialize 001E  
                         _ADCON0bits 000FC2                     __CFG_SOSCSEL$DIG 000000  
                          main@delay 002F                            copy_data0 0500  
              ?_INTERRUPT_Initialize 0001                           ?_setLedOff 0001  
                   ??_I2C_Initialize 001E                             __Hrparam 0000  
                           __Lrparam 0000                    _ADC_GetConversion 05F2  
                 __CFG_BOREN$SBORDIS 000000                       ?_getByteToSend 0001  
            ??_OSCILLATOR_Initialize 001E                   ?_ADC_GetConversion 0001  
                    I2C_ISR@i2c_data 000F                     __size_of___awdiv 0084  
        __size_of_EUSART1_Initialize 0016                  ??_ADC_GetConversion 0003  
                           _delay_ms 047E                             __ptext10 06BE  
                           __ptext11 06D4                             __ptext20 0722  
                           __ptext12 0712                             __ptext21 05F2  
                           __ptext13 06EA                           _T1GCONbits 000FAA  
                           __ptext22 0582                             __ptext15 0544  
                           __ptext16 05BE                             __ptext17 01A8  
                           __ptext18 038A                             __ptext19 0404  
                  ??_TMR1_StartTimer 001E          __size_of_EUSART2_Initialize 0016  
                      __size_of_main 011A  I2C_StatusCallbackOld@slaveWriteType 0038  
                           _setLedOn 038A            __end_of_ADC_GetConversion 0622  
                           int$flags 0040   __end_of_INTERRUPT_InterruptManager 008A  
         _INTERRUPT_InterruptManager 0008                  __CFG_INTOSCSEL$HIGH 000000  
                 _I2C_slaveWriteData 003F                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 001E              handleByteReceived@value 000A  
            handleByteReceived@xhigh 0009                             intlevel2 0000  
                        ??_setLedOff 0003              ?_PIN_MANAGER_Initialize 0001  
         __end_of_I2C_StatusCallback 05F2                           _RCSTA1bits 000FAB  
                         _RCSTA2bits 000FA6      I2C_StatusCallback@i2c_bus_state 000D  
                   ??_ADC_Initialize 001E                      ??_getByteToSend 0001  
                 __CFG_WDTPS$1048576 000000                          _SSPCON1bits 000FC6  
           __end_of_ECCP1_Initialize 0722       __end_of_PIN_MANAGER_Initialize 067E  
                __CFG_BORPWR$ZPBORMV 000000           __size_of_ADC_GetConversion 0030  
                    _TMR1_Initialize 0622  
